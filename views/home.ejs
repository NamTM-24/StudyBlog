<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="/output.css">
  <link rel="stylesheet" href="/css/chat-widget.css">
  <title>Home</title>

  <script>
    document.head.insertAdjacentHTML("afterbegin", '<link rel="stylesheet" type="text/css" href="https://unpkg.com/flowbite-typography@1.0.3/dist/typography.min.css">');
  </script>

  <!-- Socket.IO Client -->
  <script src="/socket.io/socket.io.js"></script>

  <style>
    /* Đảm bảo modal hiển thị đúng */
    #avatar-modal {
      display: none;
    }

    #avatar-modal:not(.hidden) {
      display: block !important;
    }

    /* Đảm bảo các button trong modal hiển thị */
    #select-avatar-btn,
    #cancel-avatar-btn,
    #save-avatar-btn {
      display: inline-block !important;
    }

    /* Đảm bảo tất cả nội dung trong modal hiển thị */
    #avatar-modal .mt-3 {
      display: block !important;
    }

    #avatar-modal .mb-4 {
      display: block !important;
    }

    #avatar-modal .flex {
      display: flex !important;
    }
  </style>



  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          colors: {
            primary: {
              "50": "#eff6ff",
              "100": "#dbeafe",
              "200": "#bfdbfe",
              "300": "#93c5fd",
              "400": "#60a5fa",
              "500": "#3b82f6",
              "600": "#2563eb",
              "700": "#1d4ed8",
              "800": "#1e40af",
              "900": "#1e3a8a",
              "950": "#172554"
            }
          }
        },
        fontFamily: {
          body: [
            'Inter', 'ui-sans-serif', 'system-ui', '-apple-system', 'system-ui',
            'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', 'sans-serif',
            'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'
          ],
          sans: [
            'Inter', 'ui-sans-serif', 'system-ui', '-apple-system', 'system-ui',
            'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', 'sans-serif',
            'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'
          ]
        }
      }
    }
  </script>
</head>

<body>

  <header class="">
    <nav class="bg-gray-900 border-gray-200 ">
      <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
        <a href="https://github.com/Weaverse/internship-program" target="_blank"
          class="flex items-center space-x-3 rtl:space-x-reverse">
          <img src="/images/weaverseio_logo.jpg" class="h-8" alt="" />
          <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white text-white">StudyBlog</span>
        </a>

        <div class="flex items-center md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse gap-5">
          <!-- github -->
          <a href="https://github.com/NamTM-24" target="_blank" aria-label="Weaverse Github Org"
            class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-800 hover:bg-gray-700 focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600">
            <svg class="w-5 h-5 text-white" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
              <path fill-rule="evenodd" clip-rule="evenodd"
                d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.438 9.8 8.205 11.387.6.111.82-.261.82-.579 0-.287-.011-1.046-.017-2.053-3.338.726-4.042-1.61-4.042-1.61-.546-1.386-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.085 1.839 1.237 1.839 1.237 1.07 1.835 2.807 1.304 3.492.997.108-.774.418-1.304.762-1.604-2.665-.305-5.467-1.333-5.467-5.931 0-1.31.469-2.381 1.236-3.221-.124-.303-.536-1.524.117-3.176 0 0 1.008-.323 3.3 1.23a11.51 11.51 0 013.004-.404c1.019.005 2.047.138 3.004.404 2.291-1.553 3.297-1.23 3.297-1.23.655 1.652.243 2.873.12 3.176.77.84 1.235 1.911 1.235 3.221 0 4.61-2.807 5.624-5.48 5.921.43.371.823 1.103.823 2.222 0 1.605-.015 2.896-.015 3.289 0 .321.216.694.825.576C20.565 21.797 24 17.309 24 12c0-6.63-5.37-12-12-12z" />
            </svg>
          </a>
          <!-- facebook -->
          <a href="https://www.facebook.com/hnt0024" target="_blank" aria-label="Visit our Facebook"
            class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-800 hover:bg-gray-700 focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512" class="w-5 h-5 text-white fill-current">
              <path d="M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 
  52.24-50.06h40.42V6.26S293.48 0 267.5 0c-73.1 0-121.05 44.38-121.05 
  124.72V195.3H86.4V288h60.05v224h92.66V288z" />
            </svg>
          </a>

          <!-- gmail -->
          <a href="https://www.facebook.com/hnt0024" target="_blank" aria-label="Visit our Facebook"
            class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-800 hover:bg-gray-700 focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" class="w-5 h-5 text-white fill-current">
              <path
                d="M502.3 190.8L327.4 338.5c-17.7 14.8-43.6 14.8-61.3 0L9.7 190.8C3.7 186.1 0 178.8 0 171V48c0-26.5 21.5-48 48-48h416c26.5 0 48 21.5 48 48v123c0 7.8-3.7 15.1-9.7 19.8zM0 216v208c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V216l-180.7 151c-35.3 29.6-85.5 29.6-120.8 0L0 216z" />
            </svg>
          </a>

          <!-- User Profile Dropdown -->
          <% if (user) { %>
            <!-- Debug: User object: <%= JSON.stringify(user) %> -->
            <div class="relative">
              <button id="user-menu-button" type="button"
                class="flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600"
                aria-expanded="false">
                <span class="sr-only">Open user menu</span>
                <% if (user.avatar) { %>
                  <!-- Debug: Avatar path: <%= user.avatar %> -->
                  <img class="w-8 h-8 rounded-full cursor-pointer" src="<%= user.avatar %>" alt="<%= user.name %>"
                    onerror="console.log('Avatar load failed:', this.src);">
                  <% } else { %>
                    <!-- Debug: No avatar for user: <%= user.name %> -->
                    <div class="w-8 h-8 rounded-full bg-gray-600 flex items-center justify-center cursor-pointer">
                      <span class="text-sm font-medium text-white">
                        <%= user.name ? user.name.charAt(0).toUpperCase() : 'U' %>
                      </span>
                    </div>
                    <% } %>
              </button>

              <!-- Admin Chat Link - Removed to avoid duplicate widgets -->
              <!-- Dropdown menu -->
              <div
                class="hidden absolute right-0 mt-2 z-50 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600"
                id="user-dropdown" style="min-width: 200px;">
                <div class="px-4 py-3">
                  <span class="block text-sm text-gray-900 dark:text-white">
                    <%= user.name %>
                  </span>
                  <span class="block text-sm text-gray-500 truncate dark:text-gray-400">
                    <%= user.email %>
                  </span>
                </div>
                <ul class="py-2" aria-labelledby="user-menu-button">
                  <li>
                    <a href="/user/profile/<%= user.id %>"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">
                      <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                      </svg>
                      Hồ sơ của tôi
                    </a>
                  </li>
                  <% if (user.role === 'USER') { %>
                  <li>
                    <a href="/posts/create/new"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">
                      <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                      </svg>
                      Viết bài
                    </a>
                  </li>
                  <li>
                    <a href="/posts/user/manage"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">
                      <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                      </svg>
                      Quản lý bài viết
                    </a>
                  </li>
                  <% } %>
                  <% if (user.role === 'ADMIN') { %>
                  <li>
                    <a href="/admin"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">
                      <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h4a2 2 0 012 2v6H8V5z"></path>
                      </svg>
                      Quản lý admin
                    </a>
                  </li>
                  <% } %>
                  <li>
                    <button type="button" id="change-avatar-btn"
                      class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">
                      <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                      </svg>
                      Thay đổi avatar
                    </button>
                  </li>
                  <li>
                    <a href="/logout"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white">
                      <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1">
                        </path>
                      </svg>
                      Đăng xuất
                    </a>
                  </li>
                </ul>
              </div>
            </div>
            <% } else { %>
              <a href="/login"
                class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-800 hover:bg-gray-700 focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600">
                <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
              </a>
              <% } %>
        </div>


        <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-user">
          <ul
            class="flex flex-col font-medium p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700">
            <li>
              <a href="#"
                class="block py-2 px-3 text-white bg-blue-700 rounded-sm md:bg-transparent md:text-blue-700 md:p-0 md:dark:text-blue-500"
                aria-current="page">Trang chủ</a>
            </li>
            <li>
              <a href="#"
                class="block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Lộ
                trình</a>
            </li>
            <li>
              <a href="#"
                class="block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Danh
                mục</a>
            </li>
            <li>
              <a href="#"
                class="block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Giới
                thiệu</a>
            </li>
            <li>
              <a href="#"
                class="block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700">Liên
                hệ</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
  </header>

  <!-- MID -->
  <!-- 
Install the "flowbite-typography" NPM package to apply styles and format the article content: 

URL: https://flowbite.com/docs/components/typography/ 
-->

  <main class="pb-16 lg:pb-24 bg-white dark:bg-gray-900 antialiased">
    <header
      class="bg-[url('https://flowbite.s3.amazonaws.com/blocks/marketing-ui/articles/background.png')] w-full h-[460px] xl:h-[537px] bg-no-repeat bg-cover bg-center bg-blend-darken relative">
      <div class="absolute top-0 left-0 w-full h-full bg-black bg-opacity-50"></div>
      <div
        class="absolute top-20 left-1/2 px-4 mx-auto w-full max-w-screen-xl -translate-x-1/2 xl:top-1/2 xl:-translate-y-1/2 xl:px-0">
        <h1 class="mb-4 max-w-4xl text-2xl font-extrabold leading-none text-white sm:text-3xl lg:text-4xl">Weaverse
          InternShip: Từ Tự Học Đến Xây Dựng
          Shopify Project</h1>
        <p class="text-lg font-normal text-gray-300">Mỗi dự án thực tập đều là cơ hội để học hỏi và trải nghiệm.</p>
      </div>
    </header>
    <div
      class="flex relative z-20 justify-between p-6 -m-36 mx-4 max-w-screen-xl bg-white dark:bg-gray-800 rounded xl:-m-32 xl:p-9 xl:mx-auto">
      <article
        class="xl:w-[828px] w-full max-w-none format format-sm sm:format-base lg:format-lg format-blue dark:format-invert">
        <div class="flex flex-col lg:flex-row justify-between lg:items-center">
          <div class="flex items-center space-x-3 text-gray-500 dark:text-gray-400 text-base mb-2 lg:mb-0">
            <span>Tác giả <a href="#"
                class="text-gray-900 dark:text-white hover:underline no-underline font-semibold">NamHT</a></span>
            <span class="bg-gray-300 dark:bg-gray-400 w-2 h-2 rounded-full"></span>
            <span><time class="font-normal text-gray-500 dark:text-gray-400" pubdate class="uppercase"
                datetime="2025-08-14" title="August 3rd, 2025">Tháng 8, 2025, 2:20</time></span>
          </div>
          <aside aria-label="Share social media">
            <div class="not-format">
              <button data-tooltip-target="tooltip-facebook"
                class="inline-flex items-center p-2 text-sm font-medium text-center text-gray-500 bg-white rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none dark:text-white focus:ring-gray-50 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                type="button">
                <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 8 19">
                  <path fill-rule="evenodd"
                    d="M6.135 3H8V0H6.135a4.147 4.147 0 0 0-4.142 4.142V6H0v3h2v9.938h3V9h2.021l.592-3H5V3.591A.6.6 0 0 1 5.592 3h.543Z"
                    clip-rule="evenodd" />
                </svg>
              </button>
              <div id="tooltip-facebook" role="tooltip"
                class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip dark:bg-gray-700">
                Share on Facebook
                <div class="tooltip-arrow" data-popper-arrow></div>
              </div>

              <button data-tooltip-target="tooltip-twitter"
                class="inline-flex items-center p-2 text-sm font-medium text-center text-gray-500 bg-white rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none dark:text-white focus:ring-gray-50 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                type="button">
                <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                  <path fill="currentColor"
                    d="M12.186 8.672 18.743.947h-2.927l-5.005 5.9-4.44-5.9H0l7.434 9.876-6.986 8.23h2.927l5.434-6.4 4.82 6.4H20L12.186 8.672Zm-2.267 2.671L8.544 9.515 3.2 2.42h2.2l4.312 5.719 1.375 1.828 5.731 7.613h-2.2l-4.699-6.237Z" />
                </svg>
              </button>
              <div id="tooltip-twitter" role="tooltip"
                class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip dark:bg-gray-700">
                Share on Twitter
                <div class="tooltip-arrow" data-popper-arrow></div>
              </div>

              <button data-tooltip-target="tooltip-reddit"
                class="inline-flex items-center p-2 text-sm font-medium text-center text-gray-500 bg-white rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none dark:text-white focus:ring-gray-50 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                type="button">
                <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" aria-hidden="true" viewBox="0 0 18 18"
                  fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                  <g clip-path="url(#clip0_13676_82300)">
                    <path
                      d="M9 18C13.9706 18 18 13.9706 18 9C18 4.02944 13.9706 0 9 0C4.02944 0 0 4.02944 0 9C0 13.9706 4.02944 18 9 18Z" />
                    <path
                      d="M15.0004 8.99997C15.0004 8.27365 14.411 7.68418 13.6846 7.68418C13.3267 7.68418 13.011 7.82102 12.7794 8.0526C11.8846 7.41049 10.6425 6.98944 9.27412 6.93681L9.87412 4.12628L11.8215 4.53681C11.8425 5.03155 12.2531 5.43155 12.7583 5.43155C13.2741 5.43155 13.6952 5.01049 13.6952 4.4947C13.6952 3.97891 13.2741 3.55786 12.7583 3.55786C12.3899 3.55786 12.0741 3.76839 11.9267 4.08418L9.7478 3.62102C9.68464 3.61049 9.62148 3.62102 9.56885 3.6526C9.51622 3.68418 9.48464 3.73681 9.46359 3.79997L8.80043 6.93681C7.40043 6.97891 6.1478 7.38944 5.24254 8.0526C5.01096 7.83155 4.68464 7.68418 4.33727 7.68418C3.61096 7.68418 3.02148 8.27365 3.02148 8.99997C3.02148 9.53681 3.33727 9.98944 3.80043 10.2C3.77938 10.3263 3.76885 10.4631 3.76885 10.6C3.76885 12.621 6.11622 14.2526 9.02149 14.2526C11.9267 14.2526 14.2741 12.621 14.2741 10.6C14.2741 10.4631 14.2636 10.3368 14.2425 10.2105C14.6741 9.99997 15.0004 9.53681 15.0004 8.99997ZM6.00043 9.93681C6.00043 9.42102 6.42148 8.99997 6.93727 8.99997C7.45306 8.99997 7.87412 9.42102 7.87412 9.93681C7.87412 10.4526 7.45306 10.8737 6.93727 10.8737C6.42148 10.8737 6.00043 10.4526 6.00043 9.93681ZM11.232 12.4105C10.5899 13.0526 9.36885 13.0947 9.01096 13.0947C8.65306 13.0947 7.42148 13.0421 6.7899 12.4105C6.69517 12.3158 6.69517 12.1579 6.7899 12.0631C6.88464 11.9684 7.04254 11.9684 7.13727 12.0631C7.53727 12.4631 8.40043 12.6105 9.02149 12.6105C9.64254 12.6105 10.4952 12.4631 10.9057 12.0631C11.0004 11.9684 11.1583 11.9684 11.2531 12.0631C11.3267 12.1684 11.3267 12.3158 11.232 12.4105ZM11.0636 10.8737C10.5478 10.8737 10.1267 10.4526 10.1267 9.93681C10.1267 9.42102 10.5478 8.99997 11.0636 8.99997C11.5794 8.99997 12.0004 9.42102 12.0004 9.93681C12.0004 10.4526 11.5794 10.8737 11.0636 10.8737Z"
                      fill="white" />
                  </g>
                  <defs>
                    <clipPath id="clip0_13676_82300">
                      <rect width="18" height="18" />
                    </clipPath>
                  </defs>
                </svg>
              </button>
              <div id="tooltip-reddit" role="tooltip"
                class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip dark:bg-gray-700">
                Post on Reddit
                <div class="tooltip-arrow" data-popper-arrow></div>
              </div>

              <button data-tooltip-target="tooltip-link"
                class="inline-flex items-center p-2 text-sm font-medium text-center text-gray-500 bg-white rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none dark:text-white focus:ring-gray-50 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                type="button">
                <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 19 19">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M11.013 7.962a3.519 3.519 0 0 0-4.975 0l-3.554 3.554a3.518 3.518 0 0 0 4.975 4.975l.461-.46m-.461-4.515a3.518 3.518 0 0 0 4.975 0l3.553-3.554a3.518 3.518 0 0 0-4.974-4.975L10.3 3.7" />
                </svg>
              </button>
              <div id="tooltip-link" role="tooltip"
                class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip dark:bg-gray-700">
                Share link
                <div class="tooltip-arrow" data-popper-arrow></div>
              </div>

              <button data-tooltip-target="tooltip-save"
                class="inline-flex items-center p-2 text-sm font-medium text-center text-gray-500 bg-white rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none dark:text-white focus:ring-gray-50 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                type="button">
                <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 20">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="m13 19-6-5-6 5V2a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v17Z" />
                </svg>
              </button>
              <div id="tooltip-save" role="tooltip"
                class="inline-block absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip dark:bg-gray-700">
                Save this article
                <div class="tooltip-arrow" data-popper-arrow></div>
              </div>
              <button id="dropdownMenuIconHorizontalButton" data-dropdown-toggle="dropdownDotsHorizontal"
                class="inline-flex items-center p-2 text-sm font-medium text-center text-gray-500 bg-white rounded-lg hover:bg-gray-100 focus:ring-4 focus:outline-none dark:text-white focus:ring-gray-50 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
                type="button">
                <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 3">
                  <path
                    d="M2 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm6.041 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM14 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Z" />
                </svg>
              </button>
              <!-- Dropdown menu -->
              <div id="dropdownDotsHorizontal"
                class="hidden z-10 w-36 bg-white rounded divide-y divide-gray-100 shadow dark:bg-gray-700 dark:divide-gray-600">
                <ul class="py-1 text-sm text-gray-700 dark:text-gray-200"
                  aria-labelledby="dropdownMenuIconHorizontalButton">
                  <li>
                    <a href="#"
                      class="block py-2 px-4 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Add to
                      collection</a>
                  </li>
                  <li>
                    <a href="#"
                      class="block py-2 px-4 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Report</a>
                  </li>
                </ul>
              </div>
            </div>
          </aside>
        </div>
        <p class="lead">Trước khi đặt chân vào kỳ thực tập Weaverse Developer Internship, mình chỉ là một người tự học
          lập trình qua sách, video YouTube và những khóa học online. Hành trang của mình khi ấy là JavaScript, một chút
          TypeScript, vài dự án nhỏ với React và Node.js — đủ để hiểu cú pháp, nhưng chưa đủ để “ra chiến trường” làm
          sản phẩm thật.</p>

        <p>Khi đọc thông tin về chương trình thực tập 12–16 tuần của Weaverse, mình biết đây chính là cơ hội để biến
          những kiến thức rời rạc thành một quy trình làm việc thực tế: từ Frontend, Backend, Database, cho đến
          E-commerce với Shopify/Hydrogen/Weaverse. Đặc biệt, chương trình không chỉ dạy kỹ thuật, mà còn hướng dẫn cách
          triển khai dự án hoàn chỉnh và làm việc nhóm như trong môi trường công ty.</p>

        <p>Cấu trúc & mục tiêu của chương trình <a href="https://github.com/Weaverse/internship-program"
            target="_blank">Weaverse
            Internship</a> <br> Thời gian: 12–16 tuần, 30–36 giờ/tuần <br>

          Hình thức: Hybrid learning (kết hợp online & onsite), có mentor đồng hành <br>

          Trọng tâm: Frontend, Backend, Database, Build Tools, E-commerce (Shopify, Hydrogen, Weaverse) <br>

          Mục tiêu: <br>

          Xây dựng ứng dụng web production-ready <br>

          Hiểu toàn bộ quy trình full-stack <br>

          Làm chủ công nghệ thương mại điện tử headless commerce <br>

          Hoàn thành dự án cuối kỳ: Weaverse Hydrogen Theme kết nối Shopify</p>
        <figure><img
            src="https://camo.githubusercontent.com/715e275b5c925fc509818b2e28ed883804e5704ab86b1cf539ca980922172586/68747470733a2f2f77656176657273652e696f2f7374617469632f696d616765732f6c6f676f2e737667"
            alt="" class="mx-auto">
          <figcaption>Logo Weaverse Team </figcaption>
        </figure>
        <h2>Hành trình học & làm – Từ nền tảng đến dự án thực tế</h2>
        <h3>Tuần 1–2: JavaScript & TypeScript – Củng cố móng nhà</h3>
        <p>Mình bắt đầu bằng việc ôn lại Core JavaScript, làm 30 bài tập trên Exercism, học Functional Programming với
          map/filter/reduce và Async/Await.</p>
        <p>Sau đó là TypeScript Fundamentals: type annotation, interface, generics, union/intersection… Bài tập cuối
          tuần là xây dựng CLI Task Manager type-safe bằng Commander.js – một trải nghiệm giúp mình hiểu rõ hơn về
          terminal và xử lý file trong Node.js.</p>
        <p>Bạn có thể luyện những bài tập JavaScript ở tại đây <a
            href="https://exercism.org/tracks/javascript">JavaScript Exercise</a> Hoàn thành các bài tập sau: <br>
          - 15 bài dễ: Bắt đầu từ những kiến thức cơ bản để tạo sự tự tin. <br>

          - 10 bài trung bình: Vận dụng các khái niệm vào tình huống phức tạp hơn. <br>

          - 5 bài khó: Thử thách bản thân với các vấn đề nâng cao.</p>
        <h3>Tập trung nắm vững các nội dung:</h3>
        <p>1. Biến và kiểu dữ liệu <br>

          2. Hàm và phạm vi <br>

          3. Mảng và đối tượng <br>

          4. Cấu trúc điều khiển và vòng lặp <br>

          5. Xử lý chuỗi.</p>
        <h3>Tuần 3–4: DOM, CSS & Modern Styling – Từ HTML tĩnh đến giao diện động</h3>
        <p>Hai tuần này mình học DOM manipulation, event handling, luyện Flexbox & CSS Grid qua game, và làm quen
          TailwindCSS. Assignment lớn là clone FreshCart – một website bán hàng responsive, viết bằng Tailwind + vanilla
          JS, triển khai lên GitHub Pages.</p>
        <ol>
          <li><strong>DOM Manipulation & Event Handling</strong>. Mặc dù chưa tìm được bộ bài tập cụ thể, bạn có thể tìm
            các tutorial hướng dẫn cách thao tác DOM và xử lý sự kiện bằng JavaScript thông qua:

            Tìm các bài trên MDN hoặc YouTube với từ khóa: "JavaScript DOM manipulation exercises" hoặc "event handling
            tutorial".
          </li>
          <li><strong>Flexbox & CSS Grid (qua trò chơi tương tác)</strong>. Rất nhiều trò chơi thú vị giúp bạn vừa
            “chơi” vừa học Flexbox và Grid hiệu quả: <br>

            Flexbox Froggy — giúp bạn học qua trò chơi đưa ếch đến tấm lá bằng cách viết CSS flexbox (justify-content,
            align-items...) <br>
            <a href="https://flexboxfroggy.com/#vi" target="_blank">flexboxfroggy.com</a> <br>
            Grid Garden — giống Flexbox Froggy nhưng cho CSS Grid qua trò chơi chăm sóc “vườn” <br>
            <a href="https://froggy.fullstack.edu.vn/" target="_blank">froggy.fullstack.edu.vn</a><br>
          </li>
          <li><strong>Bài tập Flexbox / Grid truyền thống</strong> Nếu bạn thích làm bài tập truyền thống hơn: <br>
            - Flexbox-layout-exercises (GitHub) — gồm các bài tập như Holy Grail layout, chessboard, Mondrian painting —
            giúp bạn thực hành Flexbox qua các ví dụ thực tế <br>


            - Flexbox-exercises — một số layout cơ bản như centering, sticky footer, navigation
            bar,
            grid linh động… chỉ dùng HTML và CSS


            - Exercise-CSS-grid-and-flexbox — bài tập kết hợp cả Grid cho layout tổng thể và Flexbox cho từng
            thẻ
            card, yêu cầu bạn không sử dụng media queries, dùng repeat, auto-fill, minmax()...</li>
          <li><strong>Tailwind CSS (và FreshCart Clone)</strong>. Để làm bài assignment clone FreshCart bằng Tailwind +
            vanilla JS, bạn có thể tham khảo:

            Template FreshCart (miễn phí) — UI kit được thiết kế sẵn bằng Tailwind CSS, HTML và một số plugin JS, có thể
            dùng làm đầu tàu cho bản clone của bạn


            Tài liệu thiết lập môi trường & dùng FreshCart — hướng dẫn cài Node.js, Gulp, TailwindCSS và cấu trúc file,
            giúp bạn làm việc nhanh và chuyên nghiệp hơn


            Tailwind CSS Tutorial (TutorialsPoint) — cung cấp hướng dẫn từ cài đặt (qua CDN hoặc npm) đến các utility
            classes về layout, spacing, typography, Flexbox & Grid, v.v. rất chi tiết


            Bài tập thực hành Tailwind từ Pro Tailwind — gồm các tutorial hướng dẫn qua bài tập như tạo animated
            background, ribbon banner linh hoạt v.v. — giúp bạn nâng cao hơn kỹ năng dùng Tailwind CSS
          </li>
        </ol>
        <h3>Tuần 5–6: AI Integration & Build Tools – Khi AI trở thành đồng đội</h3>
        <p>Trong hai tuần này, chúng mình đi sâu vào Prompt Engineering – nghệ thuật viết câu lệnh để AI hiểu và phản
          hồi chính xác theo nhu cầu. Song song, chúng mình thực hành tích hợp AI (Google Gemini) trực tiếp vào IDE (như
          VS Code), biến AI thành “trợ lý lập trình” hỗ trợ viết code, refactor, gợi ý logic, tạo test case, và thậm chí
          sinh tài liệu dự án. <code>AI Agent</code></p>

        <p>Chúng mình cũng tìm hiểu về Vite – công cụ build siêu nhanh và hiện đại, thay thế cho các công cụ truyền
          thống như Webpack. Vite giúp rút ngắn thời gian khởi động dự án, hỗ trợ hot reload mượt mà, đồng thời dễ tích
          hợp với TypeScript, Tailwind CSS và nhiều framework khác.</p>
        <p>Assignment lớn trong giai đoạn này là BudgetY – một ứng dụng quản lý chi tiêu viết bằng TypeScript + Tailwind
          + Vite, tận dụng AI để tự động gợi ý giao diện, hỗ trợ phân tích dữ liệu chi tiêu và đưa ra gợi ý tối ưu ngân
          sách.</p>
        <p>Trong bối cảnh AI ngày càng phát triển và ảnh hưởng sâu rộng đến ngành phần mềm, việc biết cách sử dụng và
          khai thác sức mạnh của AI là kỹ năng bắt buộc để không bị tụt hậu. AI không chỉ thay thế một phần công việc,
          mà còn giúp lập trình viên tăng tốc, giảm sai sót và mở ra những cách tiếp cận mới trong phát triển phần mềm."
        </p>
        <h4>Tài liệu tham khảo:</h4>
        <ol>
          <li><strong>Prompt Engineering & AI Integration</strong> <a href="https://www.promptingguide.ai/">Prompt
              Engineering Guide</a> <br>
            <a href="https://ai.google.dev/gemini-api/docs?hl=vi">Google Gemini API Overview</a>
          </li>
          <li><strong>Vite & Build Tools</strong> <a href="https://vite.dev/">Vite Official Docs</a> <br>
            <a href="https://vite.dev/guide/#scaffolding-your-first-vite-project">Vite + TypeScript Setup</a>
          </li>
          <li><strong>Ứng dụng thực tế với AI</strong> <a
              href="https://dev.to/azure/build-an-ai-powered-web-app-with-typescript-and-azure-openai-service-2bbi">Building
              an AI-powered App with TypeScript</a> <br>
            <a href="https://blog.logrocket.com/how-ai-changing-frontend-development/">AI in Frontend Development</a>
          </li>
        </ol>
        <h3>Tuần 7–8: Node.js & Backend Development – Xây API như dân chuyên</h3>
        <h4>Trong giai đoạn này, chúng mình bước vào thế giới backend – nơi xử lý logic, dữ liệu và bảo mật cho ứng
          dụng. Toàn bộ phần học được chia thành 3 chặng chính:</h4>

        <ul>
          <li><strong>Node.js & Express</strong>Làm quen với Node.js, dựng API cơ bản với Express, hiểu cách xử lý
            request/response, routing, middleware, và trả dữ liệu ở định dạng JSON.</li>
          <li><strong>MySQL</strong>Kết nối backend với cơ sở dữ liệu MySQL, thiết kế bảng, viết CRUD chuẩn RESTful API
            để tương tác với dữ liệu một cách có tổ chức và tối ưu.</li>
          <li><strong>Prisma ORM</strong>Sử dụng Prisma để có type safety, tự động sinh query, quản lý database schema
            qua migration và làm việc hiệu quả hơn khi kết hợp với TypeScript.</li>

          <h3>Assignment cuối</h3>
          <p>Xây dựng Blog API với đầy đủ chức năng JWT Authentication, CRUD cho posts/comments/tags, và triển khai dự
            án hoàn thiện lên Railway. Dự án này giúp bạn trải nghiệm toàn bộ quy trình phát triển backend thực tế, từ
            thiết kế API, kết nối database, bảo mật, cho đến triển khai sản phẩm ra môi trường thật.</p>
          <blockquote>
            <p>Node.js – Xây mọi thứ từ API nhanh như chớp đến ứng dụng real-time. Lựa chọn số một cho backend hiện
              đại.</p>
          </blockquote>
          <h4>Ví dụ về NodeJS & Express</h4>
          <p>Node.js là môi trường chạy JavaScript phía server, cho phép xây dựng ứng dụng nhanh và hiệu quả. Express là
            framework tối giản giúp tạo API, quản lý routing và middleware một cách rõ ràng, gọn nhẹ.</p>

          <pre><code class="language-javascript">
// -------------------- CÀI ĐẶT MÔI TRƯỜNG --------------------
// Node.js: chạy JavaScript phía server, cần cài express và prisma
// Lệnh cài: npm install express @prisma/client
// Lệnh khởi tạo Prisma: npx prisma init (để tạo prisma/schema.prisma)
// Sau đó cấu hình DATABASE_URL trong file .env

// -------------------- IMPORT THƯ VIỆN --------------------
const express = require('express'); // Node.js: Import Express framework
const { PrismaClient } = require('@prisma/client'); // Prisma: Import client để thao tác DB

const app = express(); // Node.js: Tạo ứng dụng Express
const prisma = new PrismaClient(); // Prisma: Tạo kết nối tới DB

app.use(express.json()); // Node.js: Middleware parse JSON từ request body

// -------------------- API ROUTES --------------------

// Node.js + Express: Route GET lấy danh sách user
// Prisma: Sử dụng prisma.user.findMany() để query tất cả bản ghi từ bảng User
app.get('/users', async (req, res) => {
  const users = await prisma.user.findMany();
  res.json(users);
});

// Node.js + Express: Route POST tạo user mới
// Prisma: prisma.user.create() để thêm bản ghi mới vào bảng User
app.post('/users', async (req, res) => {
  const { name, email } = req.body;
  const newUser = await prisma.user.create({
    data: { name, email }
  });
  res.json(newUser);
});

// Node.js + Express: Route PUT cập nhật user
// Prisma: prisma.user.update() để cập nhật bản ghi dựa vào id
app.put('/users/:id', async (req, res) => {
  const { id } = req.params;
  const { name, email } = req.body;
  const updatedUser = await prisma.user.update({
    where: { id: Number(id) },
    data: { name, email }
  });
  res.json(updatedUser);
});

// Node.js + Express: Route DELETE xóa user
// Prisma: prisma.user.delete() để xóa bản ghi dựa vào id
app.delete('/users/:id', async (req, res) => {
  const { id } = req.params;
  await prisma.user.delete({ where: { id: Number(id) } });
  res.json({ message: 'User deleted' });
});

// -------------------- CHẠY SERVER --------------------
// Node.js: app.listen() mở cổng cho server lắng nghe request
app.listen(3000, () => {
  console.log('Server is running on http://localhost:3000');
});
</code></pre>

          <h3>Tuần 9–10: React – Xây giao diện động và hiện đại</h3>
          <p><strong>Học React cơ bản:</strong>Làm quen với components, props, state, hooks (useState, useEffect) để xây
            dựng giao diện có tính tương tác</p>
          <p><strong>Tích hợp ShadcnUI:</strong>Sử dụng bộ UI component này để nhanh chóng tạo giao diện chuyên nghiệp,
            đẹp mắt, có sẵn style tối ưu.</p>
          <p><strong>Quản lý state với Preact Signals:</strong>Giúp quản lý dữ liệu giữa các components đơn giản, hiệu
            suất cao, giảm độ phức tạp so với Redux.</p>
          <h4>Thực hành lớn (Assignment):</h4>
          <ol>
            <strong>Xây dựng Blog Platform – frontend kết nối Blog API, có:</strong>
            <li>Xác thực người dùng (Auth): Đăng ký, đăng nhập, đăng xuất.</li>
            <li>Tìm kiếm & Lọc bài viết: Search theo từ khóa, filter theo danh mục/tác giả.</li>
            <li>Form validation: Kiểm tra dữ liệu nhập trước khi gửi.</li>
            <li>Responsive design: Tối ưu hiển thị trên mobile, tablet và desktop.</li>
          </ol>


          <h3>Tuần 11–12: Advanced Topics & Security – Bảo mật và nâng cao trải nghiệm</h3>
          <p>Học Zod để validate dữ liệu cả client lẫn server. Làm việc với React Router ở cấp độ nâng cao: nested
            routes, dynamic params, breadcrumbs. Assignment: Full-Featured Online Store – trang thương mại điện tử hoàn
            chỉnh, có giỏ hàng, checkout multi-step, blog, tìm kiếm, filtering.</p>

          <h3>Tuần 13: Shopify Development – Bước vào thế giới thương mại điện tử</h3>
          <p>Tạo tài khoản Partner, dựng store dev, thêm sản phẩm, viết blog, setup theme và navigation.
            Tiếp đó, học Shopify Hydrogen và GraphQL Storefront API: fetch products, collections, blogs, variants.
            Assignment: Xây custom Hydrogen storefront kết nối store Shopify thật.</p>

          <h3>Tuần 14: Weaverse Integration – Đưa visual builder vào cuộc chơi</h3>
          <p>Cài Weaverse SDK, tạo custom components có schema để người dùng chỉnh sửa trực tiếp trong Weaverse Studio.
            Đây là bước “nâng cấp” Hydrogen store thành một sản phẩm thực sự linh hoạt.</p>

          <h3>Tuần 15–16: Final Project & Internship Review – Ghép tất cả mảnh ghép</h3>
          <h4>Dự án cuối là Weaverse Hydrogen Theme:</h4>

          <ol>
            <li>Catalog sản phẩm từ Shopify</li>
            <li>Giỏ hàng & checkout</li>
            <li>Customer account</li>
            <li>Page builder trực quan</li>
            <li>SEO + performance optimization</li>
            <li>Triển khai production & viết tài liệu kỹ thuật</li>
          </ol>

          <!-- BÌNH LUẬN (JavaScript - không reload trang) -->
          <section class="not-format">
            <div class="flex justify-between items-center mb-6">
              <h2 class="text-lg lg:text-2xl font-bold text-gray-900 dark:text-white">Bình luận</h2>
            </div>

            <!-- Form tạo comment mới -->
            <div class="mb-6">
              <div
                class="mb-4 w-full bg-gray-50 rounded-lg border border-gray-200 dark:bg-gray-700 dark:border-gray-600">
                <div class="py-2 px-4 bg-gray-50 rounded-t-lg dark:bg-gray-800">
                  <label for="new-comment" class="sr-only">Your comment</label>
                  <textarea id="new-comment" rows="6"
                    class="px-0 w-full text-sm text-gray-900 bg-gray-50 border-0 dark:bg-gray-800 focus:ring-0 dark:text-white dark:placeholder-gray-400"
                    placeholder="Hãy viết bình luận của bạn..."></textarea>
                </div>
                <div class="flex justify-between items-center py-2 px-3 border dark:border-gray-600">
                  <button type="button" id="submit-comment"
                    class="inline-flex items-center py-2.5 px-4 text-xs font-medium text-center text-red-600 dark:text-white bg-primary-700 rounded-lg focus:ring-4 focus:ring-primary-200 dark:focus:ring-primary-900 hover:bg-primary-800 border border-primary-700">
                    Đăng bình luận
                  </button>
                </div>
              </div>
            </div>

            <!-- Container hiển thị comments -->
            <div id="comments-container">
              <!-- Comments sẽ được load bằng JavaScript -->
              <div id="loading-comments" class="text-center py-8">
                <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-primary-700"></div>
                <p class="mt-2 text-gray-600 dark:text-gray-400">Đang tải bình luận...</p>
              </div>
              <div id="no-comments" class="text-center py-8 hidden">
                <p class="text-gray-600 dark:text-gray-400">Chưa có bình luận nào. Hãy là người đầu tiên bình luận!</p>
              </div>
            </div>
          </section>

          <script>
      // Toggle menu ba chấm cho từng comment/reply
      // Đã dùng id động nên không cần JS phức tạp
          </script>
          <!-- cmt -->


      </article>
      <aside class="hidden xl:block" aria-labelledby="sidebar-label">
        <div class="xl:w-[336px] sticky top-6">
          <h3 id="sidebar-label" class="sr-only">Sidebar</h3>
          <div class="mb-12">
            <h4 class="mb-4 text-sm font-bold text-gray-900 dark:text-white uppercase">Tin tức mới</h4>
            <% if (otherPosts && otherPosts.length> 0) { %>
              <% otherPosts.slice(0, 3).forEach((post, index)=> { %>
                <div class="mb-6 flex items-center">
                  <a href="<%= post.url %>" class="shrink-0">
                    <% if (post.heroImage) { %>
                      <img src="<%= post.heroImage %>" class="mr-4 max-w-full w-24 h-24 rounded-lg object-cover"
                        alt="<%= post.title %>">
                      <% } else { %>
                        <div
                          class="mr-4 w-24 h-24 rounded-lg bg-gradient-to-br from-slate-200 to-slate-300 dark:from-slate-700 dark:to-slate-600 flex items-center justify-center">
                          <span class="text-2xl text-slate-500 dark:text-slate-400">📄</span>
                        </div>
                        <% } %>
                  </a>
                  <div>
                    <h5 class="mb-2 text-lg font-bold leading-tight dark:text-white text-gray-900">
                      <a href="<%= post.url %>" class="hover:underline">
                        <%= post.title %>
                      </a>
                    </h5>
                    <p class="mb-2 text-gray-500 dark:text-gray-400">
                      <%= post.excerpt %>
                    </p>
                    <a href="<%= post.url %>"
                      class="inline-flex items-center font-medium underline underline-offset-4 text-primary-600 dark:text-primary-500 hover:no-underline">
                      Đọc bài
                    </a>
                  </div>
                </div>
                <% }); %>
                  <% } else { %>
                    <div class="text-center py-8">
                      <p class="text-gray-500 dark:text-gray-400">Chưa có bài viết nào</p>
                    </div>
                    <% } %>
          </div>
        </div>
      </aside>
    </div>
  </main>

  <aside aria-label="Related articles" class="py-8 lg:py-24 bg-white dark:bg-gray-900">
    <div class="px-4 mx-auto max-w-screen-xl">
      <div class="mb-6 lg:mb-8">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">Bản tin mới & Bài viết liên quan</h2>
        <p class="text-gray-600 dark:text-gray-400 mt-2">Khám phá những bài viết mới nhất từ admin và cộng đồng</p>
      </div>

      <% if (otherPosts && otherPosts.length> 0) { %>
        <div class="relative overflow-hidden">
          <div id="rel-track" class="flex gap-6 transition-transform duration-500 ease-out">
            <% otherPosts.forEach((post)=> { %>
              <div class="w-full md:w-1/3 flex-shrink-0">
                <article
                  class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 h-full hover:shadow-lg transition-all duration-300 hover:-translate-y-1">
                  <div class="flex flex-col h-full">
                    <a href="<%= post.url %>" class="block mb-4">
                      <% if (post.heroImage) { %>
                        <img src="<%= post.heroImage %>" class="w-full h-48 object-cover rounded-lg"
                          alt="<%= post.title %>">
                        <% } else { %>
                          <div
                            class="w-full h-48 rounded-lg bg-gradient-to-br from-slate-200 to-slate-300 dark:from-slate-700 dark:to-slate-600 flex items-center justify-center">
                            <span class="text-6xl text-slate-500 dark:text-slate-400">📄</span>
                          </div>
                          <% } %>
                    </a>
                    <div class="flex-1 flex flex-col">
                      <div class="flex items-center gap-2 mb-2">
                        <% if (post.isUserPost) { %>
                          <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">
                            <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                            </svg>
                            User Post
                          </span>
                        <% } %>
                        <% if (post.author && post.author.name) { %>
                          <span class="text-xs text-gray-500 dark:text-gray-400">
                            bởi <%= post.author.name %>
                          </span>
                        <% } %>
                      </div>
                      <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3 line-clamp-2 leading-tight">
                        <a href="<%= post.url %>"
                          class="hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
                          <%= post.title.length> 60 ? post.title.substring(0, 60) + '...' : post.title %>
                        </a>
                      </h3>
                      <p class="text-gray-600 dark:text-gray-400 mb-4 line-clamp-3 text-sm leading-relaxed flex-1">
                        <%= post.excerpt && post.excerpt.length> 100 ? post.excerpt.substring(0, 100) + '...' :
                          (post.excerpt || 'Đọc bài viết để khám phá nội dung thú vị...') %>
                      </p>
                      <div class="flex items-center justify-between pt-3 border-t border-gray-100 dark:border-gray-700">
                        <span class="text-xs text-gray-500 dark:text-gray-400">
                          <%= post.prettyDate || '15/1/2025' %>
                        </span>
                        <a href="<%= post.url %>"
                          class="inline-flex items-center text-sm font-medium text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 transition-colors">
                          Đọc bài
                          <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7">
                            </path>
                          </svg>
                        </a>
                      </div>
                    </div>
                  </div>
                </article>
              </div>
              <% }) %>
          </div>
        </div>

        <% if (otherPosts && otherPosts.length> 3) { %>
          <div class="mt-8 flex items-center justify-center gap-4">
            <button id="rel-prev"
              class="group flex items-center justify-center w-10 h-10 rounded-full border border-gray-300 dark:border-gray-600 text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 hover:bg-blue-50 dark:hover:bg-blue-900 hover:border-blue-300 dark:hover:border-blue-600 hover:text-blue-600 dark:hover:text-blue-400 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-white disabled:hover:text-gray-500"
              aria-label="Previous">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
              </svg>
            </button>

            <div class="flex items-center gap-2">
              <span id="rel-page"
                class="px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-lg">
                Page 1 of 1
              </span>
            </div>

            <button id="rel-next"
              class="group flex items-center justify-center w-10 h-10 rounded-full border border-gray-300 dark:border-gray-600 text-gray-500 dark:text-gray-400 bg-white dark:bg-gray-800 hover:bg-blue-50 dark:hover:bg-blue-900 hover:border-blue-300 dark:hover:border-blue-600 hover:text-blue-600 dark:hover:text-blue-400 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:bg-white disabled:hover:text-gray-500"
              aria-label="Next">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
              </svg>
            </button>
          </div>
          <% } %>
            <% } else { %>
              <div class="text-center py-12">
                <div class="text-6xl mb-4">📝</div>
                <h3 class="text-xl font-semibold text-gray-700 dark:text-gray-300 mb-2">Chưa có bài viết nào</h3>
                <p class="text-gray-500 dark:text-gray-400">Hãy tạo bài viết đầu tiên trong trang Admin!</p>
              </div>
              <% } %>
    </div>
  </aside>

  <script>
      (function () {
        const track = document.getElementById('rel-track');
        if (!track) return;
        const prev = document.getElementById('rel-prev');
        const next = document.getElementById('rel-next');
        const pageEl = document.getElementById('rel-page');

        let currentPageIndex = 0;

        function getItemsPerView() {
          return window.innerWidth >= 768 ? 3 : 1;
        }

        function getTotalPages() {
          const total = track.children.length;
          const per = getItemsPerView();
          return Math.max(1, Math.ceil(total / per));
        }

        function getCurrentPage() {
          return currentPageIndex + 1;
        }

        function updateSlider() {
          const itemsPerView = getItemsPerView();
          const cardWidth = track.children[0] ? track.children[0].offsetWidth + 24 : 0; // +24 for gap
          const translateX = currentPageIndex * itemsPerView * cardWidth;

          track.style.transform = `translateX(-${translateX}px)`;

          // Update pagination info
          if (pageEl) pageEl.textContent = `Page ${getCurrentPage()} of ${getTotalPages()}`;

          // Update button states
          if (prev) {
            prev.disabled = currentPageIndex === 0;
            prev.classList.toggle('opacity-50', currentPageIndex === 0);
          }
          if (next) {
            const isLastPage = getCurrentPage() >= getTotalPages();
            next.disabled = isLastPage;
            next.classList.toggle('opacity-50', isLastPage);
          }
        }

        // Event listeners
        if (prev) {
          prev.addEventListener('click', () => {
            if (currentPageIndex > 0) {
              currentPageIndex--;
              updateSlider();
            }
          });
        }

        if (next) {
          next.addEventListener('click', () => {
            if (getCurrentPage() < getTotalPages()) {
              currentPageIndex++;
              updateSlider();
            }
          });
        }

        // Handle responsive changes
        window.addEventListener('resize', () => {
          // Reset to first page on resize to avoid layout issues
          currentPageIndex = 0;
          updateSlider();
        });

        // Initialize
        updateSlider();
      })();
  </script>


  <section class="bg-gray-50 dark:bg-gray-800">
    <div class="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6">
      <div class="mx-auto max-w-screen-md sm:text-center">
        <h2 class="mb-4 text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl dark:text-white">Nếu có góp ý
          gì hãy viết vào đây nhé!</h2>
        <p class="mx-auto mb-8 max-w-2xl text-gray-500 md:mb-12 sm:text-xl dark:text-gray-400">Mỗi Ý Kiến Là Một Viên
          Gạch – Chung Tay Xây Dựng Ngôi Nhà Tri Thức Mang Tên StudyBlog</p>
        <form action="#">
          <div class="items-center mx-auto mb-3 space-y-4 max-w-screen-sm sm:flex sm:space-y-0">
            <div class="relative w-full">
              <label for="message" class="hidden mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">Your
                Message</label>
              <div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
                <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M2 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12l-4-4H4a2 2 0 0 1-2-2V4z" />
                </svg>
              </div>
              <input
                class="block p-3 pl-9 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 sm:rounded-none sm:rounded-l-lg focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
                placeholder="Nhập tin nhắn của bạn..." type="text" id="message" required>
            </div>
            <div>
              <button type="submit"
                class="py-3 px-5 w-full text-sm font-medium text-center text-white dark:text-white rounded-lg border cursor-pointer bg-primary-700 border-primary-600 sm:rounded-none sm:rounded-r-lg hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">
                Gửi
              </button>
            </div>
          </div>
        </form>

      </div>
    </div>
  </section>


  <!-- MID -->



  <!-- Load Comment System -->
  <script src="/js/comment-system.js"></script>
  <script src="/js/home-init.js"></script>
  <script>
    // Initialize home page when DOM is loaded
    document.addEventListener('DOMContentLoaded', function () {
      const userData = <%- JSON.stringify(user || null) %>;
      console.log('🏠 Initializing home page with user data:', userData);
      if (typeof initializeHomePage === 'function') {
        initializeHomePage(userData);
      } else {
        console.error('❌ initializeHomePage function not found');
      }
    });
  </script>

  <!-- Socket.IO for Admin Notifications on Home Page -->
  <script>
    // Admin notification system for home page
    (function () {
      <% if (user && user.role === 'ADMIN') { %>
      const socket = io();
        const token = getCookie('accessToken');
        let unreadCount = 0;

        // Join as admin for notifications
        socket.emit('join-chat', { token });

        // Listen for new user messages
        socket.on('new-user-message', (data) => {
          console.log('Admin received new message notification on home page:', data);
          incrementNotificationCount();
          showNotification(`Tin nhắn mới từ ${data.userName}: ${data.message}`);
        });

        // Listen for user online/offline
        socket.on('user-online', (data) => {
          console.log('User online:', data.userName);
        });

        socket.on('user-offline', (data) => {
          console.log('User offline:', data.userName);
        });

        function incrementNotificationCount() {
          unreadCount++;
          updateNotificationBadge();
        }

        function resetNotificationCount() {
          unreadCount = 0;
          updateNotificationBadge();
        }

        function updateNotificationBadge() {
          const badge = document.getElementById('home-chat-notification-badge');
          const countElement = document.getElementById('home-chat-notification-count');

          if (unreadCount > 0) {
            badge.classList.remove('hidden');
            countElement.textContent = unreadCount;
          } else {
            badge.classList.add('hidden');
          }
        }

        function showNotification(message) {
          // Create notification
          const notification = document.createElement('div');
          notification.className = 'fixed top-4 right-4 bg-red-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 transform transition-all duration-300 translate-x-full';
          notification.textContent = message;

          document.body.appendChild(notification);

          // Animate in
          setTimeout(() => {
            notification.classList.remove('translate-x-full');
          }, 100);

          // Remove after 5 seconds
          setTimeout(() => {
            notification.classList.add('translate-x-full');
            setTimeout(() => {
              document.body.removeChild(notification);
            }, 300);
          }, 5000);
        }

        // Reset notification count when clicking on chat link
        document.getElementById('home-chat-notification-badge')?.parentElement?.addEventListener('click', () => {
          resetNotificationCount();
        });

        function getCookie(name) {
          const value = `; ${document.cookie}`;
          const parts = value.split(`; ${name}=`);
          if (parts.length === 2) return parts.pop().split(';').shift();
        }
      <% } %>
    })();
  </script>

  <!-- Chat Widget Script -->
  <script src="/js/chat-widget.js"></script>
  <script>
    // Initialize ChatWidget when page loads (only if not already initialized)
    document.addEventListener('DOMContentLoaded', function () {
      console.log('🏠 Home page loaded, checking ChatWidget...');
      if (typeof ChatWidget !== 'undefined' && !window.chatWidget) {
        window.chatWidget = new ChatWidget();
        console.log('✅ ChatWidget initialized on home page');
      } else if (window.chatWidget) {
        console.log('✅ ChatWidget already initialized');
      } else {
        console.error('❌ ChatWidget class not found');
      }
    });
  </script>

  <!-- Avatar Change Modal - Hashnode Style -->
  <div id="avatar-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center">
    <div class="bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4">
      <div class="flex justify-between items-center mb-4">
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Profile Image</h3>
        <button id="close-avatar-modal" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <div class="flex items-center space-x-4 mb-6">
        <div
          class="w-20 h-20 rounded-full bg-gray-200 dark:bg-gray-700 flex items-center justify-center overflow-hidden">
          <img id="avatar-preview" src="" alt="Avatar preview" class="w-full h-full object-cover hidden">
          <div id="avatar-placeholder"
            class="w-full h-20 bg-gray-300 dark:bg-gray-600 flex items-center justify-center">
            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
          </div>
        </div>
        <div class="flex-1">
          <button id="select-avatar-btn"
            class="bg-blue-600 hover:bg-blue-700 text-white dark:text-white px-4 py-2 rounded-lg flex items-center space-x-2 transition-colors">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z">
              </path>
            </svg>
            <span>Change Image</span>
          </button>
          <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">PNG, JPEG: 500 x 500 px</p>
        </div>
      </div>

      <div class="flex justify-end space-x-3">
        <button id="cancel-avatar-btn"
          class="px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-colors">
          Cancel
        </button>
        <button id="save-avatar-btn"
          class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white dark:text-white rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          disabled>
          Save
        </button>
      </div>

      <input type="file" id="avatar-input" accept="image/*" class="hidden">
    </div>
  </div>

</body>

</html>