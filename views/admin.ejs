<!DOCTYPE html>
<html lang="vi">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/output.css" />
    <title>Bảng Điều Khiển Admin</title>
    <!-- Socket.IO Client -->
    <script src="/socket.io/socket.io.js"></script>

    <script>
      // Tailwind custom theme
      tailwind.config = {
        darkMode: "class",
        theme: {
          extend: {
            colors: {
              brand: {
                50: "#eef2ff",
                100: "#e0e7ff",
                200: "#c7d2fe",
                300: "#a5b4fc",
                400: "#818cf8",
                500: "#6366f1",
                600: "#4f46e5",
                700: "#4338ca",
                800: "#3730a3",
                900: "#312e81",
              },
            },
            boxShadow: {
              soft: "0 10px 30px -12px rgba(2,6,23,0.25)",
            },
          },
        },
      };
    </script>
    <style>
      /* Ẩn nút tăng/giảm mặc định của input number trong một số trình duyệt (nếu dùng sau này) */
      input[type="number"]::-webkit-inner-spin-button,
      input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }

      /* Drag & Drop styles */
      .drag-area {
        transition: all 0.3s ease;
      }
      .drag-area.dragover {
        background-color: rgba(99, 102, 241, 0.1);
        border-color: #6366f1;
        transform: scale(1.02);
      }

      /* Auto-resize textarea */
      .auto-resize {
        resize: none;
        overflow: hidden;
        min-height: 60px;
      }

      /* Smooth transitions */
      .fade-in {
        animation: fadeIn 0.3s ease-in-out;
      }
      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style>
  </head>

  <body
    class="h-full bg-gradient-to-br from-slate-50 via-white to-slate-100 dark:from-slate-950 dark:via-slate-950 dark:to-slate-900 text-slate-800 dark:text-slate-100"
  >
    <!-- Root -->
    <div class="min-h-screen flex">
      <!-- Sidebar -->
      <aside
        id="sidebar"
        class="fixed md:static inset-y-0 left-0 z-40 w-72 md:w-64 translate-x-[-100%] md:translate-x-0 transition-transform duration-300 bg-white/80 dark:bg-slate-900/80 backdrop-blur border-r border-slate-200 dark:border-slate-800 flex flex-col"
      >
        <div class="px-6 py-6">
          <div class="flex items-center justify-between">
            <div
              class="text-2xl font-black tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-brand-500 to-indigo-300 drop-shadow-md"
            >
              Admin
            </div>
            <div class="flex items-center space-x-2">
              <a
                href="/admin/chat-fixed"
                class="text-sm bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded-lg transition-colors relative"
                id="chat-link"
              >
                Chat System
                <!-- Badge thông báo tin nhắn mới -->
                <span
                  id="chat-notification-badge"
                  class="hidden absolute -top-2 -right-2 bg-red-500 text-white text-xs font-bold px-2 py-1 rounded-full animate-pulse"
                >
                  <span id="chat-notification-count">0</span>
                </span>
              </a>
            </div>
            <button
              id="closeSidebar"
              class="md:hidden inline-flex items-center justify-center w-9 h-9 rounded-xl border border-slate-200 dark:border-slate-800"
            >
              ✕
            </button>
          </div>
        </div>

        <nav class="px-3 pb-6 space-y-2">
          <a
            href="/admin"
            class="group flex items-center gap-3 px-4 py-3 rounded-xl bg-gradient-to-r from-brand-600/10 to-indigo-500/10 border border-brand-600/20 text-brand-700 dark:text-brand-300"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 opacity-90"
              viewBox="0 0 24 24"
              fill="currentColor"
            >
              <path d="M4 6h16v2H4V6zm0 5h16v2H4v-2zm0 5h10v2H4v-2z" />
            </svg>
            <span class="font-semibold">Tin Tức</span>
            <span
              class="ml-auto text-xs px-2 py-0.5 rounded-full bg-brand-600/20 text-brand-700 dark:text-brand-200"
            >
              <%= posts?.length || 0 %>
            </span>
          </a>

          <a
            href="/admin/users"
            class="group flex items-center gap-3 px-4 py-3 rounded-xl hover:bg-gradient-to-r hover:from-blue-600/10 hover:to-cyan-500/10 hover:border-blue-600/20 text-slate-600 dark:text-slate-300 hover:text-blue-700 dark:hover:text-blue-300 border border-transparent hover:border-blue-600/20 transition-all duration-200"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 opacity-90"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
              />
            </svg>
            <span class="font-semibold">Quản lý User</span>
            <span
              class="ml-auto text-xs px-2 py-0.5 rounded-full bg-blue-600/20 text-blue-700 dark:text-blue-200"
            >
              <%= users?.length || 0 %>
            </span>
          </a>

          <a
            href="/admin/user-posts"
            class="group flex items-center gap-3 px-4 py-3 rounded-xl hover:bg-gradient-to-r hover:from-green-600/10 hover:to-emerald-500/10 hover:border-green-600/20 text-slate-600 dark:text-slate-300 hover:text-green-700 dark:hover:text-green-300 border border-transparent hover:border-green-600/20 transition-all duration-200"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5 opacity-90"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
              />
            </svg>
            <span class="font-semibold">Bài viết User</span>
            <span
              class="ml-auto text-xs px-2 py-0.5 rounded-full bg-green-600/20 text-green-700 dark:text-green-200"
            >
              <%= userPosts?.length || 0 %>
            </span>
          </a>
        </nav>

        <div class="mt-auto p-4 text-xs text-slate-400 dark:text-slate-600">
          <!-- footer cố tình để trống theo yêu cầu -->
        </div>
      </aside>

      <!-- Main Panel -->
      <div class="flex-1 flex flex-col md:ml-0">
        <!-- Topbar -->
        <header
          class="sticky top-0 z-30 bg-white/80 dark:bg-slate-900/80 backdrop-blur border-b border-slate-200 dark:border-slate-800"
        >
          <div class="h-16 px-4 md:px-8 flex items-center gap-3">
            <button
              id="openSidebar"
              class="md:hidden inline-flex items-center justify-center w-9 h-9 rounded-xl border border-slate-200 dark:border-slate-800"
            >
              ☰
            </button>

            <h1 class="hidden md:block text-lg font-semibold">
              Quản Lý Tin Tức
            </h1>

            <div class="ml-auto flex items-center gap-3">
              <div class="relative">
                <input
                  id="searchInput"
                  type="text"
                  placeholder="Tìm tiêu đề..."
                  class="w-56 md:w-80 rounded-2xl border border-slate-200 dark:border-slate-700 bg-white/70 dark:bg-slate-800/70 px-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-brand-500"
                />
                <span class="absolute right-3 top-2.5 text-slate-400">⌕</span>
              </div>
              <!-- check add news -->
              <a
                id="addPostBtn"
                href="/admin/posts/new"
                class="inline-flex items-center gap-2 rounded-2xl bg-brand-600 px-4 py-2 text-sm font-semibold text-white dark:text-white shadow-soft hover:bg-brand-700 transition"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-4 w-4"
                  viewBox="0 0 24 24"
                  fill="currentColor"
                >
                  <path d="M11 11V5h2v6h6v2h-6v6h-2v-6H5v-2h6z" />
                </svg>
                Viết bài mới
              </a>

              <!-- User Profile Dropdown -->
              <% if (user) { %>
              <div class="relative">
                <button
                  id="user-menu-button"
                  type="button"
                  class="flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600"
                  aria-expanded="false"
                >
                  <span class="sr-only">Open user menu</span>
                  <% if (user.avatar) { %>
                  <img
                    class="w-8 h-8 rounded-full"
                    src="<%= user.avatar %>"
                    alt="<%= user.name %>"
                  />
                  <% } else { %>
                  <div
                    class="w-8 h-8 rounded-full bg-gray-600 flex items-center justify-center"
                  >
                    <span class="text-sm font-medium text-white"
                      ><%= user.name ? user.name.charAt(0).toUpperCase() : 'U'
                      %></span
                    >
                  </div>
                  <% } %>
                </button>
                <!-- Dropdown menu -->
                <div
                  class="hidden absolute right-0 mt-2 z-50 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600"
                  id="user-dropdown"
                  style="min-width: 200px"
                >
                  <div class="px-4 py-3">
                    <span class="block text-sm text-gray-900 dark:text-white"
                      ><%= user.name %></span
                    >
                    <span
                      class="block text-sm text-gray-500 truncate dark:text-gray-400"
                      ><%= user.email %></span
                    >
                  </div>
                  <ul class="py-2" aria-labelledby="user-menu-button">
                    <li>
                      <a
                        href="/admin/user-posts"
                        class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white"
                      >
                        <svg
                          class="w-4 h-4 inline mr-2"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                          ></path>
                        </svg>
                        Quản lý bài viết User
                      </a>
                    </li>
                    <li>
                      <a
                        href="/admin/users"
                        class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white"
                      >
                        <svg
                          class="w-4 h-4 inline mr-2"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
                          ></path>
                        </svg>
                        Quản lý User
                      </a>
                    </li>
                    <li>
                      <button
                        type="button"
                        id="change-avatar-btn"
                        class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white"
                      >
                        <svg
                          class="w-4 h-4 inline mr-2"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                          ></path>
                        </svg>
                        Thay đổi avatar
                      </button>
                    </li>
                    <li>
                      <a
                        href="/logout"
                        class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white"
                      >
                        <svg
                          class="w-4 h-4 inline mr-2"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
                          ></path>
                        </svg>
                        Đăng xuất
                      </a>
                    </li>
                  </ul>
                </div>
              </div>
              <% } %>
            </div>
          </div>
        </header>

        <!-- Content -->
        <main class="px-4 md:px-8 py-6 space-y-6">
          <!-- Thông báo thành công -->
          <% if (typeof success !== 'undefined' && success === 'published') { %>
          <div
            class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded"
          >
            <strong>Thành công!</strong> Bài viết đã được đăng thành công.
          </div>
          <% } %>
          <!-- Controls -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
            <div class="col-span-2 flex items-center gap-2">
              <div class="relative">
                <select
                  id="statusFilter"
                  class="appearance-none w-36 rounded-xl border border-slate-200 dark:border-slate-700 bg-white/70 dark:bg-slate-800/70 px-3 py-2 text-sm pr-8"
                >
                  <option value="">Tất cả trạng thái</option>
                  <option value="Đang hoạt động">Đang hoạt động</option>
                  <option value="Không hoạt động">Không hoạt động</option>
                </select>
                <span
                  class="pointer-events-none absolute right-2 top-2.5 text-slate-400"
                  >▾</span
                >
              </div>

              <div class="relative">
                <select
                  id="sortSelect"
                  class="appearance-none w-40 rounded-xl border border-slate-200 dark:border-slate-700 bg-white/70 dark:bg-slate-800/70 px-3 py-2 text-sm pr-8"
                >
                  <option value="new">Mới nhất</option>
                  <option value="old">Cũ nhất</option>
                  <option value="title_az">Tiêu đề A→Z</option>
                  <option value="title_za">Tiêu đề Z→A</option>
                </select>
                <span
                  class="pointer-events-none absolute right-2 top-2.5 text-slate-400"
                  >▾</span
                >
              </div>

              <button
                id="bulkDelete"
                class="hidden items-center gap-2 rounded-xl border border-rose-300/60 text-rose-700 dark:text-rose-300 dark:border-rose-700/40 px-3 py-2 text-sm hover:bg-rose-50 dark:hover:bg-rose-900/20"
              >
                🗑️ Xoá đã chọn
              </button>
            </div>
          </div>

          <!-- Table -->
          <div
            class="overflow-hidden rounded-3xl border border-slate-200/80 dark:border-slate-800 bg-white/70 dark:bg-slate-900/70 backdrop-blur shadow-soft"
          >
            <table class="min-w-full text-sm">
              <thead>
                <tr
                  class="bg-slate-50/80 dark:bg-slate-800/60 text-slate-600 dark:text-slate-300"
                >
                  <th class="w-12 px-4 py-4 text-left">
                    <input
                      id="checkAll"
                      type="checkbox"
                      class="h-4 w-4 rounded border-slate-300 dark:border-slate-600"
                    />
                  </th>
                  <th class="w-24 px-4 py-4 text-left">Ảnh</th>
                  <th class="px-4 py-4 text-left">Tiêu Đề</th>
                  <th class="w-64 px-4 py-4 text-left">Ngày Tạo</th>
                  <th class="w-40 px-4 py-4 text-left">Trạng Thái</th>
                  <th class="w-32 px-4 py-4 text-left">Hành Động</th>
                </tr>
              </thead>
              <tbody
                id="postBody"
                class="divide-y divide-slate-200/80 dark:divide-slate-800"
              >
                <% if (!posts || posts.length===0) { %>
                <tr>
                  <td colspan="6" class="px-6 py-14 text-center">
                    <div
                      class="mx-auto w-14 h-14 rounded-2xl bg-slate-200/80 dark:bg-slate-800 mb-3"
                    ></div>
                    <div class="text-slate-500 dark:text-slate-400">
                      Chưa có bài viết
                    </div>
                  </td>
                </tr>
                <% } else { posts.forEach((post, idx)=> { const created =
                post.createdAt || ''; const status = post.status || 'Draft'; %>
                <tr
                  class="hover:bg-slate-50/60 dark:hover:bg-slate-800/40 transition"
                >
                  <td class="px-4 py-3">
                    <input
                      type="checkbox"
                      class="rowCheck h-4 w-4 rounded border-slate-300 dark:border-slate-600"
                    />
                  </td>
                  <td class="px-4 py-3">
                    <% if (post.imageUrl) { %>
                    <img
                      src="<%= post.imageUrl %>"
                      alt="thumb"
                      class="h-12 w-20 object-cover rounded-xl"
                    />
                    <% } else { %>
                    <div
                      class="h-12 w-20 rounded-xl bg-gradient-to-br from-slate-200 to-slate-300 dark:from-slate-700 dark:to-slate-600"
                    ></div>
                    <% } %>
                  </td>
                  <td class="px-4 py-3 align-top">
                    <a
                      href="<%= post.url %>"
                      target="_blank"
                      class="font-semibold text-slate-900 dark:text-slate-100 hover:underline decoration-2 decoration-brand-400/60"
                    >
                      <%= post.title %>
                    </a>
                    <div class="text-xs text-slate-400 mt-1">
                      ID: <%= post.id %>
                    </div>
                  </td>
                  <td class="px-4 py-3 text-slate-700 dark:text-slate-300">
                    <%= post.createdAt ? new
                    Date(post.createdAt).toLocaleString('vi-VN') : '—' %>
                  </td>
                  <td class="px-4 py-3">
                    <% const isActive=post.status==='ACTIVE' ; %> <% if
                    (isActive) { %>
                    <span
                      class="inline-flex items-center gap-1 rounded-full bg-emerald-500/10 text-emerald-700 dark:text-emerald-300 px-3 py-1 text-xs font-semibold"
                    >
                      <span
                        class="inline-block w-2 h-2 rounded-full bg-emerald-500"
                      ></span>
                      Đang hoạt động
                    </span>
                    <% } else { %>
                    <span
                      class="inline-flex items-center gap-1 rounded-full bg-slate-500/10 text-slate-700 dark:text-slate-300 px-3 py-1 text-xs font-semibold"
                    >
                      <span
                        class="inline-block w-2 h-2 rounded-full bg-slate-500"
                      ></span>
                      Không hoạt động
                    </span>
                    <% } %>
                  </td>
                  <td class="px-4 py-3">
                    <div class="flex items-center gap-2">
                      <button
                        type="button"
                        class="p-2 rounded-xl border border-slate-200 dark:border-slate-700 hover:bg-slate-50 dark:hover:bg-slate-800 hover:cursor-pointer"
                        title="Sửa"
                        data-edit
                        data-id="<%= post.id %>"
                        data-title="<%= post.title %>"
                        data-image="<%= post.imageUrl || '' %>"
                      >
                        ✏️
                      </button>

                      <form
                        method="POST"
                        action="/admin/posts/<%= post.id %>/toggle-status"
                      >
                        <% const isActive2 = post.status==='ACTIVE'; %>
                        <button
                          type="submit"
                          class="p-2 rounded-xl border border-slate-200 dark:border-slate-700 <%= isActive2 ? 'text-rose-600 hover:bg-rose-50 dark:hover:bg-rose-900/20' : 'text-emerald-600 hover:bg-emerald-50 dark:hover:bg-emerald-900/20' %>"
                          title="<%= isActive2 ? 'Ngừng hoạt động' : 'Kích hoạt lại' %>"
                        >
                          <%= isActive2 ? '⏸️' : '▶️' %>
                        </button>
                      </form>

                      <form
                        method="POST"
                        action="/admin/posts/<%= post.id %>/hard-delete"
                        onsubmit="return confirm('Xoá hẳn bài viết này? (Không thể khôi phục)')"
                      >
                        <button
                          type="submit"
                          class="p-2 rounded-xl border border-slate-200 dark:border-slate-700 text-red-600 hover:bg-red-50 dark:hover:bg-red-900/20"
                          title="Xoá hẳn"
                        >
                          🗑️
                        </button>
                      </form>
                    </div>
                  </td>
                </tr>
                <% }) } %>
              </tbody>
            </table>
          </div>

          <!-- Pagination (tùy chọn) -->
          <div class="flex items-center justify-between">
            <div class="text-sm text-slate-500 dark:text-slate-400">
              Tổng: <%= posts?.length || 0 %>
            </div>
            <div
              class="inline-flex overflow-hidden rounded-2xl border border-slate-200 dark:border-slate-800"
            >
              <a
                class="px-3 py-2 text-sm hover:bg-slate-50 dark:hover:bg-slate-800"
                href="#"
                >Trước</a
              >
              <span
                class="px-3 py-2 text-sm bg-slate-100 dark:bg-slate-800/70 font-semibold"
                >1</span
              >
              <a
                class="px-3 py-2 text-sm hover:bg-slate-50 dark:hover:bg-slate-800"
                href="#"
                >Sau</a
              >
            </div>
          </div>
        </main>
      </div>
    </div>

    <!-- Interactions -->
    <script>
      // Mở/đóng Sidebar (mobile)
      const sidebar = document.getElementById("sidebar");
      const openSidebar = document.getElementById("openSidebar");
      const closeSidebar = document.getElementById("closeSidebar");
      if (openSidebar)
        openSidebar.addEventListener(
          "click",
          () => (sidebar.style.transform = "translateX(0)")
        );
      if (closeSidebar)
        closeSidebar.addEventListener(
          "click",
          () => (sidebar.style.transform = "translateX(-100%)")
        );

      // Chế độ tối (dark mode) kèm lưu trạng thái
      (function initTheme() {
        const root = document.documentElement;
        const stored = localStorage.getItem("theme");
        if (
          stored === "dark" ||
          (!stored && window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          root.classList.add("dark");
        }
        const btn = document.getElementById("themeToggle");
        if (btn)
          btn.addEventListener("click", () => {
            root.classList.toggle("dark");
            localStorage.setItem(
              "theme",
              root.classList.contains("dark") ? "dark" : "light"
            );
          });
      })();

      // Bộ lọc
      const searchInput = document.getElementById("searchInput");
      const statusFilter = document.getElementById("statusFilter");
      const sortSelect = document.getElementById("sortSelect");
      const rows = Array.from(document.querySelectorAll("#postBody tr"));

      function normalize(text) {
        return (text || "").toString().toLowerCase().trim();
      }

      function applyFilters() {
        const q = normalize(searchInput?.value);
        const s = statusFilter?.value || "";
        rows.forEach((tr) => {
          const title = normalize(
            tr.querySelector("td:nth-child(3) a")?.textContent
          );
          const badge =
            tr.querySelector("td:nth-child(5) span")?.textContent?.trim() || "";
          const passText = !q || title.includes(q);
          const passStatus = !s || badge === s;
          tr.style.display = passText && passStatus ? "" : "none";
        });
      }

      function applySort() {
        const mode = sortSelect?.value || "new";
        const tbody = document.getElementById("postBody");
        const visible = rows.filter((r) => r.style.display !== "none");

        visible.sort((a, b) => {
          const ta = a.querySelector("td:nth-child(3) a")?.textContent || "";
          const tb = b.querySelector("td:nth-child(3) a")?.textContent || "";
          const da = a.querySelector("td:nth-child(4)")?.textContent || "";
          const db = b.querySelector("td:nth-child(4)")?.textContent || "";

          if (mode === "title_az") return ta.localeCompare(tb);
          if (mode === "title_za") return tb.localeCompare(ta);
          if (mode === "old") return new Date(da) - new Date(db);
          // mặc định 'new'
          return new Date(db) - new Date(da);
        });

        // re-append theo thứ tự mới
        visible.forEach((tr) => tbody.appendChild(tr));
      }

      searchInput?.addEventListener("input", () => {
        applyFilters();
        applySort();
      });
      statusFilter?.addEventListener("change", () => {
        applyFilters();
        applySort();
      });
      sortSelect?.addEventListener("change", applySort);

      // Chọn tất cả & xoá hàng loạt (client-side)
      const checkAll = document.getElementById("checkAll");
      const bulkDelete = document.getElementById("bulkDelete");
      const rowChecks = document.querySelectorAll(".rowCheck");

      function refreshBulk() {
        const anyChecked = Array.from(rowChecks).some(
          (c) => c.checked && c.closest("tr").style.display !== "none"
        );
        if (bulkDelete) bulkDelete.classList.toggle("hidden", !anyChecked);
      }
      checkAll?.addEventListener("change", (e) => {
        rowChecks.forEach((c) => {
          if (c.closest("tr").style.display !== "none")
            c.checked = e.target.checked;
        });
        refreshBulk();
      });
      rowChecks.forEach((c) => c.addEventListener("change", refreshBulk));

      bulkDelete?.addEventListener("click", () => {
        const ids = Array.from(rowChecks)
          .filter((c) => c.checked && c.closest("tr").style.display !== "none")
          .map((c) =>
            c
              .closest("tr")
              .querySelector("td:nth-child(3) .text-xs")
              ?.textContent.replace("ID:", "")
              .trim()
          );
        if (ids.length === 0) return;
        if (
          !confirm(`Xoá hẳn ${ids.length} bài đã chọn? (Không thể khôi phục)`)
        )
          return;

        // Gửi request xoá hàng loạt
        const form = document.createElement("form");
        form.method = "POST";
        form.action = "/admin/posts/bulk-delete";

        const input = document.createElement("input");
        input.type = "hidden";
        input.name = "ids";
        input.value = JSON.stringify(ids);

        form.appendChild(input);
        document.body.appendChild(form);
        form.submit();
      });

      // Khởi tạo
      applyFilters();
      applySort();
    </script>

    <!-- Modal chỉnh sửa bài viết -->
    <div id="editModal" class="fixed inset-0 z-50 hidden">
      <!-- Backdrop mờ + blur -->
      <div
        id="editBackdrop"
        class="absolute inset-0 bg-slate-900/60 backdrop-blur-sm"
      ></div>

      <!-- Hộp thoại -->
      <div class="relative mx-auto mt-24 w-full max-w-lg px-4">
        <form
          id="editForm"
          method="POST"
          enctype="multipart/form-data"
          class="rounded-2xl border border-slate-200 dark:border-slate-800 bg-white dark:bg-slate-900 shadow-soft"
        >
          <div
            class="px-6 py-4 border-b border-slate-200 dark:border-slate-800 flex items-center justify-between"
          >
            <h3 class="text-base font-semibold">Chỉnh sửa bài viết</h3>
            <button
              type="button"
              id="editClose"
              class="inline-flex items-center justify-center w-9 h-9 rounded-xl border border-slate-200 dark:border-slate-700 hover:bg-slate-50 dark:hover:bg-slate-800"
            >
              ✕
            </button>
          </div>

          <div class="px-6 py-5 space-y-4">
            <!-- Tiêu đề -->
            <div>
              <label for="editTitle" class="block text-sm font-medium mb-1"
                >Tiêu đề</label
              >
              <input
                id="editTitle"
                name="title"
                type="text"
                required
                class="w-full rounded-xl border border-slate-200 dark:border-slate-700 bg-white/70 dark:bg-slate-800/70 px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-brand-500"
              />
            </div>

            <!-- Ảnh -->
            <div
              class="grid grid-cols-1 sm:grid-cols-[160px,1fr] gap-4 items-start"
            >
              <div>
                <div class="text-sm font-medium mb-1">Ảnh xem trước</div>
                <div
                  class="h-24 w-40 rounded-xl bg-gradient-to-br from-slate-200 to-slate-300 dark:from-slate-700 dark:to-slate-600 overflow-hidden flex items-center justify-center"
                >
                  <img
                    id="imgPreview"
                    alt="preview"
                    class="max-h-24 max-w-40 hidden"
                  />
                  <span
                    id="imgPlaceholder"
                    class="text-xs text-slate-500 dark:text-slate-400"
                    >Chưa có ảnh</span
                  >
                </div>
              </div>
              <div>
                <label class="block text-sm font-medium mb-1" for="editImage"
                  >Tải ảnh lên</label
                >
                <input
                  id="editImage"
                  name="image"
                  type="file"
                  accept="image/*"
                  class="block w-full text-sm file:mr-4 file:py-2 file:px-4 file:rounded-xl file:border-0 file:bg-brand-600 file:text-white dark:file:text-white hover:file:bg-brand-700 file:cursor-pointer cursor-pointer"
                />
                <p class="mt-1 text-xs text-slate-500">
                  PNG/JPG/WebP. Ảnh sẽ thay thế chỗ "Image".
                </p>
              </div>
            </div>
          </div>

          <div
            class="px-6 py-4 border-t border-slate-200 dark:border-slate-800 flex items-center justify-end gap-2"
          >
            <button
              type="button"
              id="editCancel"
              class="px-4 py-2 rounded-xl border border-slate-200 dark:border-slate-700 hover:bg-slate-50 dark:hover:bg-slate-800 text-sm hover:cursor-pointer"
            >
              Huỷ
            </button>
            <button
              type="submit"
              class="px-4 py-2 rounded-xl border border-slate-200 dark:border-slate-700 hover:bg-slate-50 dark:hover:bg-slate-800 text-sm hover:cursor-pointer"
            >
              Lưu
            </button>
          </div>
        </form>
      </div>
    </div>

    <script>
      // ===== Modal Edit Post (event delegation + fallback) =====
      (function () {
        const $ = (sel) => document.querySelector(sel);
        const editModal = $("#editModal");
        const editForm = $("#editForm");
        const editTitle = $("#editTitle");
        const editImage = $("#editImage");
        const imgPreview = $("#imgPreview");
        const imgPlaceholder = $("#imgPlaceholder");
        const editClose = $("#editClose");
        const editCancel = $("#editCancel");
        const editBackdrop = $("#editBackdrop");

        function openEditModal(id, title, imageUrl) {
          if (!editModal) return;
          // set action
          if (editForm) editForm.action = `/admin/posts/${id}/edit`;
          // prefill title
          if (editTitle) editTitle.value = title || "";

          // prefill image
          if (imageUrl) {
            if (imgPreview) {
              imgPreview.src = imageUrl;
              imgPreview.classList.remove("hidden");
            }
            imgPlaceholder?.classList.add("hidden");
          } else {
            if (imgPreview) {
              imgPreview.src = "";
              imgPreview.classList.add("hidden");
            }
            imgPlaceholder?.classList.remove("hidden");
          }

          // mở modal: gỡ hidden + fallback display
          editModal.classList.remove("hidden");
          editModal.style.display = "block";
          document.body.classList.add("overflow-hidden");
          setTimeout(() => editTitle?.focus(), 0);
        }

        function closeEditModal() {
          if (!editModal) return;
          editModal.classList.add("hidden");
          editModal.style.display = "none";
          document.body.classList.remove("overflow-hidden");
          editForm?.reset();
          if (imgPreview) {
            imgPreview.src = "";
            imgPreview.classList.add("hidden");
          }
          imgPlaceholder?.classList.remove("hidden");
        }

        // Bắt click ✏️ bằng event delegation (ăn chắc)
        document.addEventListener(
          "click",
          (ev) => {
            const btn = ev.target.closest && ev.target.closest("[data-edit]");
            if (!btn) return;
            const id = btn.getAttribute("data-id");
            const title = btn.getAttribute("data-title") || "";
            const image = btn.getAttribute("data-image") || "";
            openEditModal(id, title, image);
          },
          true
        ); // dùng capture để tránh bị chặn bởi handler khác

        // Đóng modal: Huỷ, ✕, click nền, phím Esc
        editCancel?.addEventListener("click", closeEditModal);
        editClose?.addEventListener("click", closeEditModal);
        editBackdrop?.addEventListener("click", closeEditModal);
        window.addEventListener("keydown", (e) => {
          if (e.key === "Escape" && !editModal.classList.contains("hidden"))
            closeEditModal();
        });

        // Xem trước ảnh khi chọn file
        editImage?.addEventListener("change", (e) => {
          const file = e.target.files && e.target.files[0];
          if (!file) {
            closePreview();
            return;
          }
          const reader = new FileReader();
          reader.onload = (ev) => {
            if (imgPreview) {
              imgPreview.src = ev.target.result;
              imgPreview.classList.remove("hidden");
            }
            imgPlaceholder?.classList.add("hidden");
          };
          reader.readAsDataURL(file);
        });

        function closePreview() {
          if (imgPreview) {
            imgPreview.src = "";
            imgPreview.classList.add("hidden");
          }
          imgPlaceholder?.classList.remove("hidden");
        }

        // --- DEBUG nhanh nếu vẫn không mở ---
        window.__debugModal = () => {
          console.log({
            haveBtn: !!document.querySelector("[data-edit]"),
            haveModal: !!editModal,
          });
        };
      })();

      // Avatar functionality
      (function () {
        const userMenuButton = document.getElementById("user-menu-button");
        const userDropdown = document.getElementById("user-dropdown");
        const changeAvatarBtn = document.getElementById("change-avatar-btn");
        const avatarInput = document.createElement("input");
        avatarInput.type = "file";
        avatarInput.accept = "image/*";
        avatarInput.className = "hidden";
        document.body.appendChild(avatarInput);

        // Toggle dropdown
        if (userMenuButton && userDropdown) {
          userMenuButton.addEventListener("click", (e) => {
            e.preventDefault();
            e.stopPropagation();
            userDropdown.classList.toggle("hidden");
          });

          // Close dropdown when clicking outside
          window.addEventListener("click", (e) => {
            if (
              !userMenuButton.contains(e.target) &&
              !userDropdown.contains(e.target)
            ) {
              userDropdown.classList.add("hidden");
            }
          });
        }

        // Avatar upload functionality
        if (changeAvatarBtn) {
          changeAvatarBtn.addEventListener("click", (e) => {
            e.preventDefault();
            e.stopPropagation();
            avatarInput.click();
          });
        }

        // Handle file selection
        avatarInput.addEventListener("change", async (e) => {
          const file = e.target.files[0];
          if (!file) return;

          const formData = new FormData();
          formData.append("avatar", file);

          try {
            const response = await fetch("/api/upload-avatar", {
              method: "POST",
              body: formData,
            });

            if (response.ok) {
              const result = await response.json();
              // Update avatar in UI
              const avatarImg = userMenuButton?.querySelector("img");
              if (avatarImg) {
                avatarImg.src = result.avatar;
              } else {
                // If no img, replace placeholder with img
                const placeholder = userMenuButton?.querySelector("div");
                if (placeholder) {
                  const newImg = document.createElement("img");
                  newImg.className = "w-8 h-8 rounded-full";
                  newImg.src = result.avatar;
                  newImg.alt = "User Avatar";
                  placeholder.replaceWith(newImg);
                }
              }
              // Close dropdown
              userDropdown?.classList.add("hidden");
            } else {
              console.error("Upload failed");
            }
          } catch (error) {
            console.error("Error uploading avatar:", error);
          }
        });
      })();
    </script>

    <!-- Chat Widget for Admin -->
    <script src="/js/chat-widget.js"></script>

    <!-- Socket.IO for Admin Notifications -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
      // Admin notification system
      (function () {
        const socket = io();
        const token = getCookie("accessToken");
        let unreadCount = 0;

        // Join as admin for notifications
        socket.emit("join-chat", { token });

        // Listen for new user messages
        socket.on("new-user-message", (data) => {
          console.log("Admin received new message notification:", data);
          incrementNotificationCount();
          showNotification(`Tin nhắn mới từ ${data.userName}: ${data.message}`);
        });

        // Listen for user online/offline
        socket.on("user-online", (data) => {
          console.log("User online:", data.userName);
        });

        socket.on("user-offline", (data) => {
          console.log("User offline:", data.userName);
        });

        function incrementNotificationCount() {
          unreadCount++;
          updateNotificationBadge();
        }

        function resetNotificationCount() {
          unreadCount = 0;
          updateNotificationBadge();
        }

        function updateNotificationBadge() {
          const badge = document.getElementById("chat-notification-badge");
          const countElement = document.getElementById(
            "chat-notification-count"
          );

          if (unreadCount > 0) {
            badge.classList.remove("hidden");
            countElement.textContent = unreadCount;
          } else {
            badge.classList.add("hidden");
          }
        }

        function showNotification(message) {
          // Create notification
          const notification = document.createElement("div");
          notification.className =
            "fixed top-4 right-4 bg-red-600 text-white px-4 py-2 rounded-lg shadow-lg z-50 transform transition-all duration-300 translate-x-full";
          notification.textContent = message;

          document.body.appendChild(notification);

          // Animate in
          setTimeout(() => {
            notification.classList.remove("translate-x-full");
          }, 100);

          // Remove after 5 seconds
          setTimeout(() => {
            notification.classList.add("translate-x-full");
            setTimeout(() => {
              document.body.removeChild(notification);
            }, 300);
          }, 5000);
        }

        // Reset notification count when clicking on chat link
        document.getElementById("chat-link")?.addEventListener("click", () => {
          resetNotificationCount();
        });

        function getCookie(name) {
          const value = `; ${document.cookie}`;
          const parts = value.split(`; ${name}=`);
          if (parts.length === 2) return parts.pop().split(";").shift();
        }
      })();
    </script>
  </body>
</html>
