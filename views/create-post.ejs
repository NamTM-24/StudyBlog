<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/output.css" />
    <title>Tạo bài viết mới - Admin</title>

    <script>
      document.head.insertAdjacentHTML(
        "afterbegin",
        '<link rel="stylesheet" type="text/css" href="https://unpkg.com/flowbite-typography@1.0.3/dist/typography.min.css">'
      );
    </script>

    <!-- Quill Editor CSS -->
    <link
      href="https://cdn.quilljs.com/1.3.6/quill.snow.css"
      rel="stylesheet"
    />

    <script>
      tailwind.config = {
        darkMode: "class",
        theme: {
          extend: {
            colors: {
              primary: {
                50: "#eff6ff",
                100: "#dbeafe",
                200: "#bfdbfe",
                300: "#93c5fd",
                400: "#60a5fa",
                500: "#3b82f6",
                600: "#2563eb",
                700: "#1d4ed8",
                800: "#1e40af",
                900: "#1e3a8a",
                950: "#172554",
              },
            },
          },
          fontFamily: {
            body: [
              "Inter",
              "ui-sans-serif",
              "system-ui",
              "-apple-system",
              "system-ui",
              "Segoe UI",
              "Roboto",
              "Helvetica Neue",
              "Arial",
              "Noto Sans",
              "sans-serif",
              "Apple Color Emoji",
              "Segoe UI Emoji",
              "Segoe UI Symbol",
              "Noto Color Emoji",
            ],
            sans: [
              "Inter",
              "ui-sans-serif",
              "system-ui",
              "-apple-system",
              "system-ui",
              "Segoe UI",
              "Roboto",
              "Helvetica Neue",
              "Arial",
              "Noto Sans",
              "sans-serif",
              "Apple Color Emoji",
              "Segoe UI Emoji",
              "Segoe UI Symbol",
              "Noto Color Emoji",
            ],
          },
        },
      };
    </script>

    <style>
      .ql-editor {
        font-size: 16px;
        line-height: 1.6;
        min-height: 400px;
      }

      .ql-editor h1 {
        font-size: 2.5rem !important;
        font-weight: 700 !important;
        margin: 1.5rem 0 1rem 0 !important;
        color: #1e293b !important;
        display: block !important;
        line-height: 1.2 !important;
      }

      /* Đảm bảo Quill nhận diện đúng H1 */
      .ql-editor .ql-size-huge {
        font-size: 2.5rem !important;
        font-weight: 700 !important;
      }

      /* Thêm CSS cho Quill header */
      .ql-editor .ql-header-1 {
        font-size: 2.5rem !important;
        font-weight: 700 !important;
        margin: 1.5rem 0 1rem 0 !important;
        color: #1e293b !important;
        display: block !important;
        line-height: 1.2 !important;
      }

      /* Đảm bảo toolbar header hoạt động */
      .ql-toolbar .ql-header {
        font-size: 14px !important;
      }

      /* Thêm CSS cho Quill toolbar header dropdown */
      .ql-toolbar .ql-header .ql-picker-label {
        font-size: 14px !important;
      }

      /* Đảm bảo H1 được áp dụng đúng */
      .ql-editor .ql-header-1,
      .ql-editor h1 {
        font-size: 2.5rem !important;
        font-weight: 700 !important;
        margin: 1.5rem 0 1rem 0 !important;
        color: #1e293b !important;
        display: block !important;
        line-height: 1.2 !important;
      }

      .ql-editor h2 {
        font-size: 2rem !important;
        font-weight: 600 !important;
        margin: 1.25rem 0 0.75rem 0 !important;
        color: #334155 !important;
        display: block !important;
      }

      .ql-editor h3 {
        font-size: 1.5rem !important;
        font-weight: 600 !important;
        margin: 1rem 0 0.5rem 0 !important;
        color: #475569 !important;
        display: block !important;
      }

      .ql-editor p {
        margin: 0.75rem 0;
      }

      .ql-editor blockquote {
        border-left: 4px solid #6366f1;
        margin: 1rem 0;
        padding-left: 1rem;
        font-style: italic;
        color: #64748b;
      }

      .ql-editor code {
        background-color: #f1f5f9;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        font-family: "Courier New", monospace;
        font-size: 0.875rem;
      }

      .ql-editor pre {
        background-color: #1e293b;
        color: #e2e8f0;
        padding: 1rem;
        border-radius: 0.5rem;
        overflow-x: auto;
        margin: 1rem 0;
      }

      .ql-editor pre code {
        background: none;
        padding: 0;
        color: inherit;
      }

      .ql-editor img {
        max-width: 100%;
        height: auto;
        border-radius: 0.5rem;
        margin: 1rem 0;
      }

      .ql-editor ul,
      .ql-editor ol {
        margin: 0.75rem 0;
        padding-left: 1.5rem;
      }

      .ql-editor li {
        margin: 0.25rem 0;
      }

      .ql-editor a {
        color: #6366f1;
        text-decoration: underline;
      }

      .ql-editor a:hover {
        color: #4f46e5;
      }

      /* Dark mode styles */
      .dark .ql-editor h1 {
        color: #f1f5f9;
      }

      .dark .ql-editor h2 {
        color: #e2e8f0;
      }

      .dark .ql-editor h3 {
        color: #cbd5e1;
      }

      .dark .ql-editor code {
        background-color: #334155;
        color: #e2e8f0;
      }

      .dark .ql-editor pre {
        background-color: #0f172a;
        color: #f1f5f9;
      }

      .dark .ql-editor a {
        color: #818cf8;
      }

      .dark .ql-editor a:hover {
        color: #a5b4fc;
      }

      /* Custom toolbar styles */
      .ql-toolbar {
        border: 1px solid #e2e8f0;
        border-radius: 0.5rem 0.5rem 0 0;
        background-color: #f8fafc;
      }

      .dark .ql-toolbar {
        border-color: #475569;
        background-color: #1e293b;
      }

      .ql-container {
        border: 1px solid #e2e8f0;
        border-top: none;
        border-radius: 0 0 0.5rem 0.5rem;
      }

      .dark .ql-container {
        border-color: #475569;
      }

      /* Image upload progress */
      .upload-progress {
        position: fixed;
        top: 20px;
        right: 20px;
        background: #10b981;
        color: white;
        padding: 0.75rem 1rem;
        border-radius: 0.5rem;
        z-index: 1000;
        display: none;
      }

      .upload-progress.show {
        display: block;
      }

      /* Auto-resize title */
      .title-input {
        resize: none;
        overflow: hidden;
        min-height: 60px;
      }
    </style>
  </head>

  <body>
    <header class="">
      <nav class="bg-gray-900 border-gray-200">
        <div
          class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4"
        >
          <a
            href="/admin"
            class="flex items-center space-x-3 rtl:space-x-reverse"
          >
            <img src="/images/weaverseio_logo.jpg" class="h-8" alt="" />
            <span
              class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white text-white"
              >StudyBlog - Tạo bài viết</span
            >
          </a>

          <div
            class="flex items-center md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse gap-5"
          >
            <!-- github -->
            <a
              href="https://github.com/NamTM-24"
              target="_blank"
              aria-label="Weaverse Github Org"
              class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-800 hover:bg-gray-700 focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600"
            >
              <svg
                class="w-5 h-5 text-white"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="currentColor"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.438 9.8 8.205 11.387.6.111.82-.261.82-.579 0-.287-.011-1.046-.017-2.053-3.338.726-4.042-1.61-4.042-1.61-.546-1.386-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.085 1.839 1.237 1.839 1.237 1.07 1.835 2.807 1.304 3.492.997.108-.774.418-1.304.762-1.604-2.665-.305-5.467-1.333-5.467-5.931 0-1.31.469-2.381 1.236-3.221-.124-.303-.536-1.524.117-3.176 0 0 1.008-.323 3.3 1.23a11.51 11.51 0 013.004-.404c1.019.005 2.047.138 3.004.404 2.291-1.553 3.297-1.23 3.297-1.23.655 1.652.243 2.873.12 3.176.77.84 1.235 1.911 1.235 3.221 0 4.61-2.807 5.624-5.48 5.921.43.371.823 1.103.823 2.222 0 1.605-.015 2.896-.015 3.289 0 .321.216.694.825.576C20.565 21.797 24 17.309 24 12c0-6.63-5.37-12-12-12z"
                />
              </svg>
            </a>
            <!-- facebook -->
            <a
              href="https://www.facebook.com/hnt0024"
              target="_blank"
              aria-label="Visit our Facebook"
              class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-800 hover:bg-gray-700 focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 320 512"
                class="w-5 h-5 text-white fill-current"
              >
                <path
                  d="M279.14 288l14.22-92.66h-88.91v-60.13c0-25.35 12.42-50.06 
  52.24-50.06h40.42V6.26S293.48 0 267.5 0c-73.1 0-121.05 44.38-121.05 
  124.72V195.3H86.4V288h60.05v224h92.66V288z"
                />
              </svg>
            </a>

            <!-- gmail -->
            <a
              href="https://www.facebook.com/hnt0024"
              target="_blank"
              aria-label="Visit our Facebook"
              class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-800 hover:bg-gray-700 focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 512 512"
                class="w-5 h-5 text-white fill-current"
              >
                <path
                  d="M502.3 190.8L327.4 338.5c-17.7 14.8-43.6 14.8-61.3 0L9.7 190.8C3.7 186.1 0 178.8 0 171V48c0-26.5 21.5-48 48-48h416c26.5 0 48 21.5 48 48v123c0 7.8-3.7 15.1-9.7 19.8zM0 216v208c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V216l-180.7 151c-35.3 29.6-85.5 29.6-120.8 0L0 216z"
                />
              </svg>
            </a>

            <!-- User Profile Dropdown -->
            <% if (user) { %>
            <div class="relative">
              <button
                id="user-menu-button"
                type="button"
                class="flex text-sm bg-gray-800 rounded-full focus:ring-4 focus:ring-gray-300 dark:focus:ring-gray-600"
                aria-expanded="false"
              >
                <span class="sr-only">Open user menu</span>
                <% if (user.avatar) { %>
                <img
                  class="w-8 h-8 rounded-full"
                  src="<%= user.avatar %>"
                  alt="<%= user.name %>"
                />
                <% } else { %>
                <div
                  class="w-8 h-8 rounded-full bg-gray-600 flex items-center justify-center"
                >
                  <span class="text-sm font-medium text-white"
                    ><%= user.name ? user.name.charAt(0).toUpperCase() : 'U'
                    %></span
                  >
                </div>
                <% } %>
              </button>
              <!-- Dropdown menu -->
              <div
                class="hidden absolute right-0 mt-2 z-50 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700 dark:divide-gray-600"
                id="user-dropdown"
                style="min-width: 200px"
              >
                <div class="px-4 py-3">
                  <span class="block text-sm text-gray-900 dark:text-white"
                    ><%= user.name %></span
                  >
                  <span
                    class="block text-sm text-gray-500 truncate dark:text-gray-400"
                    ><%= user.email %></span
                  >
                </div>
                <ul class="py-2" aria-labelledby="user-menu-button">
                  <li>
                    <button
                      type="button"
                      id="change-avatar-btn"
                      class="block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white"
                    >
                      <svg
                        class="w-4 h-4 inline mr-2"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                        ></path>
                      </svg>
                      Thay đổi avatar
                    </button>
                  </li>
                  <li>
                    <a
                      href="/logout"
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 dark:text-gray-200 dark:hover:text-white"
                    >
                      <svg
                        class="w-4 h-4 inline mr-2"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
                        ></path>
                      </svg>
                      Đăng xuất
                    </a>
                  </li>
                </ul>
              </div>
            </div>
            <% } %>
          </div>

          <div
            class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1"
            id="navbar-user"
          >
            <ul
              class="flex flex-col font-medium p-4 md:p-0 mt-4 border border-gray-100 rounded-lg bg-gray-50 md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0 md:bg-white dark:bg-gray-800 md:dark:bg-gray-900 dark:border-gray-700"
            >
              <li>
                <a
                  href="/admin"
                  class="block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700"
                  >Quản lý</a
                >
              </li>
              <li>
                <a
                  href="/home"
                  class="block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700"
                  >Trang chủ</a
                >
              </li>
              <li>
                <a
                  href="/posts"
                  class="block py-2 px-3 text-gray-900 rounded-sm hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700"
                  >Bài viết</a
                >
              </li>
            </ul>
          </div>
        </div>
      </nav>
    </header>

    <!-- Upload Progress -->
    <div id="uploadProgress" class="upload-progress">
      <div class="flex items-center gap-2">
        <div
          class="animate-spin rounded-full h-4 w-4 border-b-2 border-white"
        ></div>
        <span>Đang tải ảnh lên...</span>
      </div>
    </div>

    <!-- MID -->
    <main class="pb-16 lg:pb-24 bg-white dark:bg-gray-900 antialiased">
      <header
        class="bg-[url('https://flowbite.s3.amazonaws.com/blocks/marketing-ui/articles/background.png')] w-full h-[460px] xl:h-[537px] bg-no-repeat bg-cover bg-center bg-blend-darken relative"
      >
        <div
          class="absolute top-0 left-0 w-full h-full bg-black bg-opacity-50"
        ></div>
        <div
          class="absolute top-20 left-1/2 px-4 mx-auto w-full max-w-screen-xl -translate-x-1/2 xl:top-1/2 xl:-translate-y-1/2 xl:px-0"
        >
          <span class="block mb-4 text-gray-300">Tạo bài viết mới</span>
          <h1
            class="mb-4 max-w-4xl text-2xl font-extrabold leading-none text-white sm:text-3xl lg:text-4xl"
          >
            Viết bài viết mới cho StudyBlog
          </h1>
          <p class="text-lg font-normal text-gray-300">
            Sử dụng editor rich text để tạo nội dung chất lượng
          </p>
        </div>
      </header>

      <div
        class="flex relative z-20 justify-between p-6 -m-36 mx-4 max-w-screen-xl bg-white dark:bg-gray-800 rounded xl:-m-32 xl:p-9 xl:mx-auto"
      >
        <!-- Error Message -->
        <% if (typeof error !== 'undefined' && error) { %>
        <div
          class="mb-6 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded-xl"
        >
          <strong>Lỗi!</strong> <%= error %>
        </div>
        <% } %>

        <article
          class="xl:w-[828px] w-full max-w-none format format-sm sm:format-base lg:format-lg format-blue dark:format-invert"
        >
          <!-- Title Input -->
          <div class="mb-8">
            <textarea
              id="titleInput"
              placeholder="Viết tiêu đề bài viết của bạn..."
              class="title-input w-full text-4xl md:text-5xl font-bold bg-transparent border-none outline-none resize-none placeholder-slate-400 dark:placeholder-slate-600 leading-tight"
              rows="2"
            ></textarea>
          </div>

          <!-- Content Editor -->
          <div class="mb-8">
            <div id="editor"></div>
          </div>

          <!-- Article Preview Section -->
          <div id="articlePreview" class="mb-8 hidden">
            <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-6">
              <h3
                class="text-lg font-semibold mb-4 text-gray-900 dark:text-white"
              >
                Xem trước bài viết
              </h3>

              <!-- Article Header -->
              <div class="mb-6">
                <div
                  class="flex items-center space-x-3 text-gray-500 dark:text-gray-400 text-base mb-2"
                >
                  <span
                    >Tác giả
                    <span
                      class="text-gray-900 dark:text-white font-semibold"
                      id="previewAuthor"
                      >Đang tải...</span
                    ></span
                  >
                  <span
                    class="bg-gray-300 dark:bg-gray-400 w-2 h-2 rounded-full"
                  ></span>
                  <span
                    ><time
                      class="font-normal text-gray-500 dark:text-gray-400"
                      id="previewDate"
                      >Đang tải...</time
                    ></span
                  >
                </div>
                <h1
                  id="previewTitle"
                  class="text-2xl font-bold text-gray-900 dark:text-white mb-4"
                ></h1>
              </div>

              <!-- Article Content Preview -->
              <div
                id="previewContent"
                class="prose prose-sm max-w-none dark:prose-invert"
              ></div>
            </div>
          </div>

          <!-- Action Buttons -->
          <div class="flex items-center gap-4 mt-8">
            <button
              id="publishBtn"
              class="px-6 py-2 rounded-xl bg-blue-600 hover:bg-blue-700 text-white dark:text-white font-semibold text-sm transition"
            >
              Đăng bài
            </button>
            <button
              id="previewBtn"
              class="px-6 py-2 rounded-xl border border-gray-300 hover:bg-gray-50 dark:border-gray-600 dark:hover:bg-gray-700 text-sm"
            >
              Xem trước
            </button>
          </div>

          <!-- Publish Form -->
          <form
            id="publishForm"
            method="POST"
            action="/admin/posts/new"
            class="hidden"
          >
            <input type="hidden" id="formTitle" name="title" />
            <input type="hidden" id="formContent" name="content" />
          </form>
        </article>

        <!-- Sidebar -->
        <aside class="hidden xl:block xl:w-[364px]">
          <div class="sticky top-8">
            <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-6">
              <h3 class="text-lg font-semibold mb-4">Hướng dẫn viết bài</h3>
              <ul class="space-y-2 text-sm text-gray-600 dark:text-gray-300">
                <li>• Sử dụng H1, H2, H3 cho tiêu đề</li>
                <li>• In đậm, in nghiêng cho nhấn mạnh</li>
                <li>• Chèn ảnh bằng nút hình ảnh</li>
                <li>• Tạo danh sách có thứ tự</li>
                <li>• Sử dụng blockquote cho trích dẫn</li>
              </ul>
            </div>
          </div>
        </aside>
      </div>
    </main>

    <!-- Quill Editor JS -->
    <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
    <script>
      // Auto-resize title input
      function autoResize(textarea) {
        textarea.style.height = "auto";
        textarea.style.height = textarea.scrollHeight + "px";
      }

      const titleInput = document.getElementById("titleInput");
      titleInput?.addEventListener("input", () => autoResize(titleInput));

      // Initialize Quill Editor
      const toolbarOptions = [
        [{ header: [1, 2, 3, false] }],
        ["bold", "italic", "underline", "strike"],
        [{ list: "ordered" }, { list: "bullet" }],
        [{ script: "sub" }, { script: "super" }],
        [{ indent: "-1" }, { indent: "+1" }],
        [{ direction: "rtl" }],
        [{ size: ["small", false, "large", "huge"] }],
        [{ color: [] }, { background: [] }],
        [{ font: [] }],
        [{ align: [] }],
        ["clean"],
        ["link", "image", "video", "code-block", "blockquote"],
      ];

      const quill = new Quill("#editor", {
        theme: "snow",
        modules: {
          toolbar: {
            container: toolbarOptions,
            handlers: {
              image: imageHandler,
            },
          },
        },
        placeholder: "Bắt đầu viết nội dung bài viết của bạn...",
      });

      // Custom image handler
      function imageHandler() {
        const input = document.createElement("input");
        input.setAttribute("type", "file");
        input.setAttribute("accept", "image/*");
        input.click();

        input.onchange = async () => {
          const file = input.files[0];
          if (file) {
            await uploadImage(file);
          }
        };
      }

      // Upload image function
      async function uploadImage(file) {
        const progress = document.getElementById("uploadProgress");
        progress.classList.add("show");

        const formData = new FormData();
        formData.append("image", file);

        try {
          const response = await fetch("/admin/upload-image", {
            method: "POST",
            body: formData,
          });

          if (response.ok) {
            const result = await response.json();
            const range = quill.getSelection();
            quill.insertEmbed(range.index, "image", result.url);
            quill.setSelection(range.index + 1);
          } else {
            throw new Error("Upload failed");
          }
        } catch (error) {
          console.error("Upload error:", error);
          alert("Không thể tải ảnh lên. Vui lòng thử lại.");
        } finally {
          progress.classList.remove("show");
        }
      }

      // Get current user info
      let currentUser = null;

      // Fetch current user info
      async function fetchCurrentUser() {
        try {
          const response = await fetch("/api/current-user");
          if (response.ok) {
            currentUser = await response.json();
          }
        } catch (error) {
          console.error("Error fetching user:", error);
        }
      }

      // Preview functionality
      const previewBtn = document.getElementById("previewBtn");
      const articlePreview = document.getElementById("articlePreview");
      const previewTitle = document.getElementById("previewTitle");
      const previewContent = document.getElementById("previewContent");
      const previewAuthor = document.getElementById("previewAuthor");
      const previewDate = document.getElementById("previewDate");

      previewBtn?.addEventListener("click", () => {
        const title = titleInput?.value.trim();
        const content = quill.root.innerHTML;
        const textContent = quill.getText().trim();

        if (!title) {
          alert("Vui lòng nhập tiêu đề bài viết!");
          titleInput?.focus();
          return;
        }

        if (!textContent || textContent.length < 3) {
          alert("Vui lòng nhập nội dung bài viết!");
          quill.focus();
          return;
        }

        // Update preview
        previewTitle.textContent = title;
        previewContent.innerHTML = content;

        // Update author and date
        if (currentUser) {
          previewAuthor.textContent = currentUser.name || "Tác giả";
        } else {
          previewAuthor.textContent = "Tác giả";
        }

        const now = new Date();
        previewDate.textContent = now.toLocaleDateString("vi-VN", {
          year: "numeric",
          month: "long",
          day: "numeric",
          hour: "2-digit",
          minute: "2-digit",
        });

        // Show preview
        articlePreview.classList.remove("hidden");
        articlePreview.scrollIntoView({ behavior: "smooth" });
      });

      // Publish functionality
      const publishBtn = document.getElementById("publishBtn");
      const publishForm = document.getElementById("publishForm");

      publishBtn?.addEventListener("click", async () => {
        console.log("=== Publish button clicked ===");
        const title = titleInput?.value.trim();
        const content = quill.root.innerHTML;
        const textContent = quill.getText().trim();

        console.log("Title:", title);
        console.log("Content HTML length:", content ? content.length : 0);
        console.log(
          "Content text length:",
          textContent ? textContent.length : 0
        );
        console.log(
          "Content preview:",
          content ? content.substring(0, 100) + "..." : "empty"
        );

        if (!title) {
          alert("Vui lòng nhập tiêu đề bài viết!");
          titleInput?.focus();
          return;
        }

        if (!textContent || textContent.length < 3) {
          alert("Vui lòng nhập nội dung bài viết!");
          quill.focus();
          return;
        }

        // Show loading state
        publishBtn.disabled = true;
        publishBtn.textContent = "Đang đăng bài...";

        try {
          // Fill form data
          console.log("Setting form values...");
          document.getElementById("formTitle").value = title;
          document.getElementById("formContent").value = content;

          console.log("Form action:", publishForm.action);
          console.log("Form method:", publishForm.method);

          // Submit form
          console.log("Submitting form...");
          publishForm.submit();
        } catch (error) {
          console.error("Error publishing:", error);
          alert("Có lỗi xảy ra khi đăng bài. Vui lòng thử lại.");

          // Reset button state
          publishBtn.disabled = false;
          publishBtn.textContent = "Đăng bài";
        }
      });

      // Initialize
      autoResize(titleInput);

      // Fetch current user info on page load
      fetchCurrentUser();

      // Avatar functionality
      (function () {
        const userMenuButton = document.getElementById("user-menu-button");
        const userDropdown = document.getElementById("user-dropdown");
        const changeAvatarBtn = document.getElementById("change-avatar-btn");
        const avatarInput = document.createElement("input");
        avatarInput.type = "file";
        avatarInput.accept = "image/*";
        avatarInput.className = "hidden";
        document.body.appendChild(avatarInput);

        // Toggle dropdown
        if (userMenuButton && userDropdown) {
          userMenuButton.addEventListener("click", (e) => {
            e.preventDefault();
            e.stopPropagation();
            userDropdown.classList.toggle("hidden");
          });

          // Close dropdown when clicking outside
          window.addEventListener("click", (e) => {
            if (
              !userMenuButton.contains(e.target) &&
              !userDropdown.contains(e.target)
            ) {
              userDropdown.classList.add("hidden");
            }
          });
        }

        // Avatar upload functionality
        if (changeAvatarBtn) {
          changeAvatarBtn.addEventListener("click", (e) => {
            e.preventDefault();
            e.stopPropagation();
            avatarInput.click();
          });
        }

        // Handle file selection
        avatarInput.addEventListener("change", async (e) => {
          const file = e.target.files[0];
          if (!file) return;

          const formData = new FormData();
          formData.append("avatar", file);

          try {
            const response = await fetch("/api/upload-avatar", {
              method: "POST",
              body: formData,
            });

            if (response.ok) {
              const result = await response.json();
              // Update avatar in UI
              const avatarImg = userMenuButton?.querySelector("img");
              if (avatarImg) {
                avatarImg.src = result.avatar;
              } else {
                // If no img, replace placeholder with img
                const placeholder = userMenuButton?.querySelector("div");
                if (placeholder) {
                  const newImg = document.createElement("img");
                  newImg.className = "w-8 h-8 rounded-full";
                  newImg.src = result.avatar;
                  newImg.alt = "User Avatar";
                  placeholder.replaceWith(newImg);
                }
              }
              // Close dropdown
              userDropdown?.classList.add("hidden");
            } else {
              console.error("Upload failed");
            }
          } catch (error) {
            console.error("Error uploading avatar:", error);
          }
        });
      })();
    </script>
  </body>
</html>
